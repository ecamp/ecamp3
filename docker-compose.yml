version: "3.4"

services:
  frontend:
    image: node:16.11.1@sha256:fec9ab31c9d46ad952abed8119b71e01e995975bd7b580f07b249e803d306dbe
    container_name: 'ecamp3-frontend'
    ports:
      - '3000:3000'
      - '9229:9229' # jest debug 
    stdin_open: true
    tty: true
    user: ${USER_ID:-1000}
    volumes:
      - ./frontend:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm
      - ./.cache/cypress:/home/node/.cache/Cypress
    working_dir: /app
    command: ./docker-setup.sh
    environment:
      - NODE_ENV=development
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - CYPRESS_CACHE_FOLDER=/home/node/.cache/Cypress

  php:
    build:
      context: ./api
      target: api_platform_php_dev
    depends_on:
      - database
      - docker-host
    restart: unless-stopped
    volumes:
      - ./.caddy/php-socket:/var/run/php
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
      - ./api/docker/php/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint
    environment:
      APP_ENV: dev
      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # See https://github.com/docker/for-linux/issues/264
      # The `remote_host` below may optionally be replaced with `remote_connect_back`
      # XDEBUG_MODE required for step debugging
      XDEBUG_MODE: develop,debug,coverage
      # default port for Xdebug 3 is 9003
      # idekey=VSCODE if you are debugging with VSCode
      XDEBUG_CONFIG: >-
        client_host=docker-host
        idekey=PHPSTORM
      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
      # Then PHPStorm will use the corresponding path mappings
      PHP_IDE_CONFIG: serverName=localhost
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    user: ${USER_ID:-1000}

  caddy:
    build:
      context: ./api
      target: api_platform_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost:4001, localhost:4443, caddy:4001}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
      MERCURE_EXTRA_DIRECTIVES: demo
    ports:
      # HTTP
      - target: 4001
        published: 3001
        protocol: tcp
      # HTTPS
      - target: 4443
        published: 4443
        protocol: tcp
      # HTTP/3
      - target: 4443
        published: 4443
        protocol: udp
    restart: unless-stopped
    user: ${USER_ID:-1000}
    volumes:
      - ./.caddy/php-socket:/var/run/php
      - ./.caddy/data:/data
      - ./.caddy/config-cache:/config
      - ./api/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./api/public:/srv/api/public:ro

  backend:
    build: ./backend
    container_name: 'ecamp3-backend'
    depends_on:
      - db
      - docker-host
    ports:
      - '4001:4001'
    user: ${USER_ID:-1000}
    volumes:
      - ./backend:/app:delegated
    entrypoint: ./docker-setup.sh

  print:
    image: node:16.11.1@sha256:fec9ab31c9d46ad952abed8119b71e01e995975bd7b580f07b249e803d306dbe
    container_name: 'ecamp3-print'
    ports:
      - '3003:3003'
    user: ${USER_ID:-1000}
    volumes:
      - ./print:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm
    working_dir: /app
    command: ./docker-setup.sh
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3003
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
    env_file:
      - ./print/print.env

  composer:
    image: composer:2@sha256:ab24624ff0cbc9296917bfac46cd9e4f9f4800f4265e343d986653d3d5698f32
    container_name: 'ecamp3-composer'
    restart: 'no'
    command: bash -c "composer install --no-interaction --no-plugins --no-scripts --prefer-dist"
    user: ${USER_ID:-1000}
    volumes:
      - ./backend:/app:delegated
      - ./.cache/composer:/tmp/cache

  db:
    image: mysql:8.0.26@sha256:5d52dc010398db422949f079c76e98f6b62230e5b59c0bf7582409d2c85abacb
    container_name: 'ecamp3-db'
    environment:
      - MYSQL_DATABASE=ecamp3dev
      - MYSQL_ROOT_PASSWORD=will-be-randomized-and-output-on-the-console
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_USER=ecamp3
      - MYSQL_PASSWORD=ecamp3
    ports:
      - '3006:3306'
    volumes:
      - db-data:/var/lib/mysql

  database:
    image: postgres:14-alpine@sha256:3908426c31b425eceee65541c320ed5e9ad921ea4f30eebff8f9129062bebd28
    environment:
      - POSTGRES_DB=ecamp3dev
      - POSTGRES_PASSWORD=ecamp3
      - POSTGRES_USER=ecamp3
    volumes:
      - db-data-postgres:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - target: 5432
        published: 5432
        protocol: tcp

  phpmyadmin:
    image: phpmyadmin/phpmyadmin@sha256:382dedf6b43bf3b6c6c90f355b4dda660beb3e099de91bb3241170e54fca6d59
    container_name: 'ecamp3-phpmyadmin'
    ports:
      - '3002:80'
    volumes:
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php

#  rabbitmq:
#    image: rabbitmq:3.9-management@sha256:e65c880a794cf01f5e83cb80ebca282413e10a73f060fc81122866e42ed4afc0
#    container_name: 'ecamp3-rabbitmq'
#    ports:
#      - '3004:15672'
#
#  worker-print-puppeteer:
#    build: ./workers/print-puppeteer
#    container_name: 'ecamp3-worker-print-puppeteer'
#    user: ${USER_ID:-1000}
#    volumes:
#      - ./workers/print-puppeteer:/app:delegated
#      - ./.cache/npm:/home/node/.npm
#      - ./.print-data:/app/data
#    command: ./docker-setup.sh
#    environment:
#      - NPM_CONFIG_UPDATE_NOTIFIER=false
#      - NPM_CONFIG_CACHE=/home/node/.npm
#
#  worker-print-weasy:
#    build: ./workers/print-weasy
#    container_name: 'ecamp3-worker-print-weasy'
#    user: ${USER_ID:-1000}
#    volumes:
#      - ./workers/print-weasy:/app:delegated
#      - ./.print-data:/app/data
#
#  print-file-server:
#    image: halverneus/static-file-server@sha256:1f88fe3030527f1ba3ded829e85e4b1acf060036c0d184d7adba4aef874d2145
#    container_name: 'ecamp3-print-file-server'
#    volumes:
#      - ./.print-data:/web
#    ports:
#      - '3005:8080'
#    environment:
#      - CORS=true

  mail:
    image: mailhog/mailhog@sha256:8d76a3d4ffa32a3661311944007a415332c4bb855657f4f6c57996405c009bea
    container_name: 'ecamp3-mail'
    ports:
      - '3007:8025' # web UI

  docker-host:
    image: qoomon/docker-host@sha256:e4c68999056cc870bb7003d5d97ba8badfeea933435d2af239d3a3a6c38163ff
    container_name: 'ecamp3-docker-host-forwarder'
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure

volumes:
  db-data:
  db-data-postgres:

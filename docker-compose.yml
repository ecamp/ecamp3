version: "3.4"

services:
  frontend:
    image: node:18.14.2
    container_name: 'ecamp3-frontend'
    ports:
      - '9229:9229' # jest debug
    stdin_open: true
    tty: true
    user: ${USER_ID:-1000}
    volumes:
      - ./.prettierrc:/.prettierrc
      - ./frontend:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm
      - ./.cache/cypress:/home/node/.cache/Cypress
    working_dir: /app
    command: ./docker-setup.sh
    environment:
      - NODE_ENV=development
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - CI=${CI}
      - CYPRESS_CACHE_FOLDER=/home/node/.cache/Cypress

  php:
    image: ecamp/ecamp3-api
    build:
      context: ./api
      target: api_platform_php_dev
      cache_from:
        - ecamp/ecamp3-api
    container_name: 'ecamp3-api'
    depends_on:
      - database
      - docker-host
    restart: unless-stopped
    volumes:
      - ./.caddy/php-socket:/var/run/php
      - ./api:/srv/api:rw,cached
      - ./.cache/composer:/tmp/composer/cache
    environment:
      DATA_MIGRATIONS_DIR: dev-data
      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # See https://github.com/docker/for-linux/issues/264
      # The `remote_host` below may optionally be replaced with `remote_connect_back`
      # XDEBUG_MODE required for step debugging
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      # default port for Xdebug 3 is 9003
      # idekey=VSCODE if you are debugging with VSCode
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
      # Then PHPStorm will use the corresponding path mappings
      PHP_IDE_CONFIG: serverName=localhost
      ADDITIONAL_TRUSTED_HOSTS: ".*"
      SHARED_COOKIE_DOMAIN: ""
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    user: ${USER_ID:-1000}
    extra_hosts:
      - "host.docker.internal:host-gateway"

  caddy:
    image: ecamp/ecamp3-caddy
    build:
      context: ./api
      target: api_platform_caddy
      cache_from:
        - ecamp/ecamp3-caddy
    container_name: 'ecamp3-caddy'
    depends_on:
      - php
    environment:
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
      MERCURE_EXTRA_DIRECTIVES: demo
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    restart: unless-stopped
    user: ${USER_ID:-1000}
    volumes:
      - ./.caddy/php-socket:/var/run/php
      - ./.caddy/data:/data
      - ./.caddy/config-cache:/config
      - ./api/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./api/public:/srv/api/public:ro

  print:
    image: node:18.14.2
    container_name: 'ecamp3-print'
    volumes:
      - ./.prettierrc:/.prettierrc
      - ./print:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm
      - node-cache:/home/node/.cache
    working_dir: /app
    command: ./docker-setup.sh
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider #TODO: remove when we update to webpack >=5
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3003
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - USER_ID=${USER_ID:-1000}
    env_file:
      - ./print/print.env

  database:
    image: postgres:13-alpine
    container_name: 'ecamp3-database'
    environment:
      - POSTGRES_DB=ecamp3dev
      - POSTGRES_PASSWORD=ecamp3
      - POSTGRES_USER=ecamp3
    volumes:
      - db-data-postgres:/var/lib/postgresql/data:rw
      - ./create-ecamp3-test-database.sh:/docker-entrypoint-initdb.d/create-ecamp3-test-database.sh
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - target: 5432
        published: 5432
        protocol: tcp

  mail:
    image: mailhog/mailhog
    container_name: 'ecamp3-mail'
    environment:
      - MH_UI_WEB_PATH=/mail

  docker-host:
    image: qoomon/docker-host
    container_name: 'ecamp3-docker-host-forwarder'
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure

  browserless:
    image: browserless/chrome:1.57.0-puppeteer-19.2.2
    container_name: 'ecamp3-browserless'
    ports:
      - '3010:3000'
    environment:
      - MAX_CONCURRENT_SESSIONS=1
      - CONNECTION_TIMEOUT=40000
      - MAX_QUEUE_LENGTH=10
      - PREBOOT_CHROME=true
      - KEEP_ALIVE=true
      - ENABLE_DEBUGGER=false
      - DISABLED_FEATURES=["downloadEndpoint","functionEndpoint","pdfEndpoint","screencastEndpoint","scrapeEndpoint","statsEndpoint","workspaces"]
      - FUNCTION_ENABLE_INCOGNITO_MODE=true 

volumes:
  db-data-postgres: null
  node-cache:

services:
  frontend:
    image: node:22.3.0
    container_name: 'ecamp3-frontend'
    ports:
      - '9229:9229' # jest debug
    stdin_open: true
    tty: true
    user: ${USER_ID:-1000}
    volumes:
      - ./.prettierrc:/.prettierrc:delegated
      - ./frontend:/app:delegated
      - ./common:/common:delegated
      - ./pdf:/pdf:delegated
      - ./.cache/npm:/home/node/.npm/_cacache:delegated
      - ./.cache/npm/sentry-cli:/home/node/.npm/sentry-cli:delegated
    environment:
      - NODE_ENV=development
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - CI=${CI}
    working_dir: /app
    command: ./docker-setup.sh
    depends_on:
      - pdf

  api:
    image: ecamp/ecamp3-dev-api
    build:
      context: ./api
      target: frankenphp_dev
      cache_from:
        - ecamp/ecamp3-dev-api
    container_name: 'ecamp3-api'
    depends_on:
      - database
      - docker-host
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
      - target: 2019
        published: 2019
        protocol: tcp
    volumes:
      - ./api:/app:rw,delegated
      - caddy_data:/data
      - caddy_config:/config
      - ./api/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini:delegated
      - ./api/docker/php/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint:delegated
      - ./.cache/composer:/tmp/composer/cache:delegated
    environment:
      DATA_MIGRATIONS_DIR: dev-data
      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # See https://github.com/docker/for-linux/issues/264
      # The `remote_host` below may optionally be replaced with `remote_connect_back`
      # XDEBUG_MODE required for step debugging
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      # default port for Xdebug 3 is 9003
      # idekey=VSCODE if you are debugging with VSCode
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
      # Then PHPStorm will use the corresponding path mappings
      PHP_IDE_CONFIG: serverName=localhost
      ADDITIONAL_TRUSTED_HOSTS: '.*'
      PERFORMANCE_TEST_DEBUG_OUTPUT: ${PERFORMANCE_TEST_DEBUG_OUTPUT:-}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    user: ${USER_ID:-1000}
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  http-cache:
    image: varnish:7.5.0
    container_name: 'ecamp3-http-cache'
    depends_on:
      - api
    volumes:
      - ./api/docker/varnish/vcl/:/etc/varnish/:ro
    ports:
      - target: 8080
        published: 3004
        protocol: tcp
    command: -a :8081,HTTP -p http_max_hdr=96
    environment:
      - COOKIE_PREFIX=localhost_
      - VARNISH_HTTP_PORT=8080

  pdf:
    image: node:22.3.0
    container_name: 'ecamp3-pdf'
    stdin_open: true
    tty: true
    user: ${USER_ID:-1000}
    volumes:
      - ./.prettierrc:/.prettierrc
      - ./pdf:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm
    working_dir: /app
    command: ./docker-setup.sh
    environment:
      - NODE_ENV=development
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - CI=${CI}

  print:
    image: node:22.3.0
    container_name: 'ecamp3-print'
    user: ${USER_ID:-1000}
    volumes:
      - ./.prettierrc:/.prettierrc
      - ./print:/app:delegated
      - ./common:/common:delegated
      - ./.cache/npm:/home/node/.npm/_cacache:delegated
      - ./.cache/npm/sentry-cli:/home/node/.npm/sentry-cli:delegated
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3003
      - NITRO_PORT=3003
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_CACHE=/home/node/.npm
      - CI=${CI}
    env_file:
      - ./print/print.env
    working_dir: /app
    command: ./docker-setup.sh

  database:
    image: postgres:15-alpine
    container_name: 'ecamp3-database'
    environment:
      - POSTGRES_DB=ecamp3dev
      - POSTGRES_PASSWORD=ecamp3
      - POSTGRES_USER=ecamp3
    volumes:
      - db-data-postgres:/var/lib/postgresql/data:rw
      - ./create-ecamp3-test-database.sh:/docker-entrypoint-initdb.d/create-ecamp3-test-database.sh
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-128G}
          cpus: ${DB_CPU_LIMIT:-8}

  mail:
    image: maildev/maildev
    container_name: 'ecamp3-mail'
    environment:
      - MAILDEV_BASE_PATHNAME=/mail

  docker-host:
    image: qoomon/docker-host
    container_name: 'ecamp3-docker-host-forwarder'
    cap_add: ['NET_ADMIN', 'NET_RAW']
    restart: on-failure

  browserless:
    image: browserless/chrome:1.61.1-puppeteer-21.9.0
    container_name: 'ecamp3-browserless'
    ports:
      - '3010:3000'
    environment:
      - MAX_CONCURRENT_SESSIONS=1
      - CONNECTION_TIMEOUT=40000
      - MAX_QUEUE_LENGTH=10
      - PREBOOT_CHROME=true
      - KEEP_ALIVE=true
      - ENABLE_DEBUGGER=false
      - DISABLED_FEATURES=["downloadEndpoint","functionEndpoint","pdfEndpoint","screencastEndpoint","scrapeEndpoint","statsEndpoint","workspaces"]
      - FUNCTION_ENABLE_INCOGNITO_MODE=true

  e2e:
    image: cypress/included:13.13.0
    profiles: ['e2e']
    container_name: 'ecamp3-e2e'
    environment:
      - DISPLAY
    volumes:
      - ./.prettierrc:/.prettierrc
      - ./e2e:/e2e:delegated
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    network_mode: host
    working_dir: /e2e

  translation:
    image: node:22.3.0
    profiles: ['translation']
    container_name: 'ecamp3-translation'
    volumes:
      - ./translation:/translation:delegated
      - ./common:/common:delegated
      - ./frontend:/frontend:delegated
      - ./print:/print:delegated
    working_dir: /translation
    command: tail -F anything

volumes:
  db-data-postgres: null
  caddy_data:
  caddy_config:

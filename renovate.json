{
  "extends": [
    "config:base"
  ],
  "force": {
    "constraints": {
      "node": "18.15.0",
      "php": "8.2.4"
    }
  },
  "automergeType": "branch",
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": [
      "on tuesday and wednesday"
    ]
  },
  "vulnerabilityAlerts": {
    "automerge": true
  },
  "labels": [
    "renovate"
  ],
  "packageRules": [
    {
      "updateTypes": [
        "minor",
        "patch",
        "pin",
        "lockFileMaintenance"
      ],
      "automerge": true
    },
    {
      "extends": [
        "monorepo:vue"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "dependencyDashboardApproval": true
    },
    {
      "matchPackageNames": [
        "sass"
      ],
      "dependencyDashboardApproval": true
    },
    {
      "matchPackageNames": [
        "php"
      ],
      "automerge": false
    },
    {
      "matchPackagePatterns": [
        "^@tiptap\/"
      ],
      "groupName": "tiptap"
    },
    {
      "matchPackagePatterns": [
        "^(@.*\\/|(.*-)?)eslint(-.*)?$",
        "^(@.*\\/|(.*-)?)lint(-.*)?$",
        "^(@.*\\/|(.*-)?)stylelint(-.*)?$",
        "^(@.*\\/|(.*-)?)prettier(-.*)?$"
      ],
      "excludePackageNames": [
        "@vue/cli-plugin-eslint",
        "lint-staged"
      ],
      "groupName": "js-linter"
    },
    {
      "matchPackageNames": [
        "phpstan/phpstan",
        "friendsofphp/php-cs-fixer",
        "vimeo/psalm"
      ],
      "groupName": "php-linter"
    },
    {
      "matchPackageNames": [
        "browserless/chrome",
        "caddy",
        "krakjoe/apcu",
        "mailhog/mailhog",
        "phpmyadmin/phpmyadmin",
        "postgres",
        "python",
        "qoomon/docker-host"
      ],
      "groupName": "docker-images",
      "schedule": [
        "after 10pm every sunday",
        "before 7am every monday"
      ]
    },
    {
      "matchPackageNames": [
        "browserless/chrome"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>\\w+)-(?<build>\\d+)\\.(\\d+)\\.(\\d+)?$"
    },
    {
      "matchPackageNames": [
        "alpine"
      ],
      "allowedVersions": "3.16"
    },
    {
      "matchPackageNames": [
        "postgres"
      ],
      "allowedVersions": "15-alpine"
    }
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^api/phpunit.xml.dist$"
      ],
      "matchStrings": [
        "<server name=\"SYMFONY_PHPUNIT_VERSION\" value=\"(?<currentValue>[^\"]+)\" />"
      ],
      "depNameTemplate": "phpunit/phpunit",
      "datasourceTemplate": "packagist"
    },
    {
      "fileMatch": [
        "^api/Dockerfile$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s(ENV|ARG) .*?_VERSION=(?<currentValue>.*)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "fileMatch": [
        "^.helm/ecamp3/values.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)?\\s.*tag: \"(?<currentValue>.*)\"\\s"
      ]
    },
    {
      "fileMatch": [
        "^.github/workflows/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "php-version: '(?<currentValue>[0-9.]+)'"
      ],
      "depNameTemplate": "php",
      "lookupNameTemplate": "php/php-src",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<prerelease>\\w+)?$",
      "extractVersionTemplate": "^php-(?<version>.*)$"
    },
    {
      "fileMatch": [
        "^renovate.json$"
      ],
      "matchStrings": [
        "\"php\": \"(?<currentValue>[^\"]+).*\".*"
      ],
      "depNameTemplate": "php",
      "lookupNameTemplate": "php/php-src",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<prerelease>\\w+)?$",
      "extractVersionTemplate": "^php-(?<version>.*)$"
    },
    {
      "fileMatch": [
        "^.github/workflows/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "tools: composer:(?<currentValue>[0-9.]+)"
      ],
      "depNameTemplate": "composer",
      "lookupNameTemplate": "composer/composer",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+).*?$"
    },
    {
      "fileMatch": [
        "^.github/workflows/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "node-version: '(?<currentValue>[^']+)'.*"
      ],
      "depNameTemplate": "node",
      "lookupNameTemplate": "nodejs/node",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+).*?$",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": [
        ".nvmrc"
      ],
      "matchStrings": [
        "(?<currentValue>[^'\n]+).*"
      ],
      "depNameTemplate": "node",
      "lookupNameTemplate": "nodejs/node",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+).*?$",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": [
        "^renovate.json$"
      ],
      "matchStrings": [
        "\"node\": \"(?<currentValue>[^\"]+).*\".*"
      ],
      "depNameTemplate": "node",
      "lookupNameTemplate": "nodejs/node",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+).*?$",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": [
        "^.github/workflows/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "image:\\s+'(?<depName>.*):(?<currentValue>.*)@(?<currentDigest>.*)'\\s"
      ],
      "datasourceTemplate": "docker"
    }
  ]
}
; ::::::::::::::::::::::::::::
; Fresque Configuration File ;
; ::::::::::::::::::::::::::::
;
; This is the default configuration
; file for your fresque application
;
; Most of these settings can be overriden
; through their corresponding option flag
; when running a command

[Redis]

; Hostname of your redis server
; Usually localhost or 127.0.0.1
host 	= localhost

; Port number of you redis server
; Default is 6379
port 	= 6379

; Redis Database
database = 0

; Redis namespace
; All resque related keys will be prepented with this string
namespace = 'resque'

[Fresque]

; Absolute or relative for storing the Pid files
; A relative path will be relative to the location
; of the fresque cli.
tmpdir = /var/www/ecamp3/data

; Absolute or relative path to php-resque libraries
; A relative path will be relative to the location
; of the fresque cli.
;
; Fresque is shipped with a copy of the php-resque
; library, but it you have already included one in your
; application, and wish to use it, put in its path
lib 	= ../../kamisama/php-resque-ex

; Absolute path to the entry point of you application
; In order to execute your jobs, php-resque have to know
; about your jobs classes.
; Instead of passing each job classes to php-resque
; one by one, use an autoloader that will autoload
; your jobs classes
include	= /var/www/ecamp3/bin/jobs/resque-autoloader.php

[Default]
; Default name of the queue the worker will be working one
; A worker can work on more than one queue, just separate
; the name with a commas, e.g "defaultone,defaultwo"
queue 	= ecamp3

; Polling frequency
; Number of seconds to sleep between each polling
interval = 5

; Number of workers to fork
; e.g putting 2 will start to workers with exactly
; the same settings
workers = 1

; User running the fresque process
; It's a system user, who must own the permissions
; to create and edit the log file and run you jobs
; Usually, it's the same user as the one running
; your php process, e.g www-data
user 	= www-data

; Verbose mode
; Log more debugging informations
; You can also enable verbose mode by using the --verbose
; option when starting a worker
verbose = 2

[Log]

; Path to the log file
; All phpresque activities will be
; recorded into this log
; You can use an absolute or relative path
; Relative path will be relative to the fresque bin file
filename 	= /var/www/ecamp3/data/log/resque.log

; Following 2 options are used only if you use
; https://github.com/kamisama/php-resque-ex
; instead of php-resque. It enables more logging
; options, such as logging to a database

; Log Handler used for logging
; Refer to Monolog documentation for a list
; of available handler
; https://github.com/Seldaek/monolog#handlers
; Use the handler name without the "Handler" part
;
; eg : to use MongoDBHandler :
; handler = MongoDB
handler =

; Options used by the handler for initialization
; Options depends on the handler, refer to each
; handler documentation for valid options.
; If handler takes more than one mandatory arguments,
; separate them with a comma
;
; eg : FileRotateHandler takes only one
; mandatory arguments : the filename
; target = path/log.log
;
; eg : CubeHandler takes one url argument
; target : udp://127.0.0.1:1180
target =


; ---------------------------------------------------------

; Following settings are optionals
; and should be used if you have more than one worker,
; with different settings each.
; It lets you start a bunch of workers at once
;
; Here, you define default settings for your
; different workers.
; Calling `load` in cli will start all of them at once
[Queues]

; Here, we will define two workers : `activity` and `stats`
; Let's start by the `activity` worker
; We set the number of workers to 2, in the following format :
; QUEUENAME[PROPERTY] = VALUE
;activity[workers] = 2
;
; PROPERTY can be any of the key defined in [Default], [Redis],
; [Fresque] or [Log] sections (above)

;
; If you don't set the other properties (interval, user etc ...),
; default value will be used.
; You need to set at least one value, even if it's the
; same as the default one, because fresque will need
; the keyname to capture the queue name

; Here, we set the properties for another worker
; named `stats`
;stats[interval] = 10
;stats[workers] = 3

; That's all folks !

{{- if .Values.postgresql.backup.schedule }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ include "dbBackupJob.name" . }}"
  labels:
    {{- include "app.commonLabels" . | nindent 4 }}
spec:
  jobTemplate:
    metadata:
      name: {{ include "dbBackupJob.name" . }}
    spec:
      template:
        spec:
          enableServiceLinks: false
          containers:
            - name: upload-backup
              image: amazon/aws-cli:2.11.21
              command:
                - sh
                - "-c"
                - |{{ range .Files.Lines "files/db_backup_job/upload-backup.sh" }}
                  {{ . }}{{ end }}
              env:
                - name: APP_NAME
                  value: {{ include "app.name" . }}
                - name: ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: encryption-key
                      optional: true
                - name: S3_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: s3-endpoint
                - name: S3_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: s3-bucket
                - name: S3_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: s3-access-key-id
                - name: S3_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: s3-access-key

              volumeMounts:
                - mountPath: /tmp/backup-dir
                  name: backup-dir
                  mountPropagation: HostToContainer
              
            - name: create-backup
              image: postgres:15
              imagePullPolicy: IfNotPresent
              command:
                - sh
                - "-c"
                - |{{ range .Files.Lines "files/db_backup_job/create-backup.sh" }}
                  {{ . }}{{ end }}
              env:
                - name: DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: database-url
                - name: ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "dbBackupJob.name" . }}
                      key: encryption-key
                      optional: true
              volumeMounts:
                - mountPath: /tmp/backup-dir
                  name: backup-dir
                  mountPropagation: HostToContainer

          restartPolicy: OnFailure
          volumes:
            - name: backup-dir
              emptyDir: { }
  schedule: {{ .Values.postgresql.backup.schedule | quote }}
{{- end }}

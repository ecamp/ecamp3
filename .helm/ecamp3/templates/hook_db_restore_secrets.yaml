{{- if .Values.postgresql.restore.sourceFile }}
{{- $databaseUrl := .Values.postgresql.url | required ".Values.postgresql.url is required." -}}
{{- $s3_endpoint := .Values.postgresql.restore.s3.endpoint | required ".Values.postgresql.restore.s3.endpoint is required." -}}
{{- $s3_bucket := .Values.postgresql.restore.s3.bucket | required ".Values.postgresql.restore.s3.bucket is required." -}}
{{- $s3_accessKeyId := .Values.postgresql.restore.s3.accessKeyId | required ".Values.postgresql.restore.s3.accessKeyId is required." -}}
{{- $s3_accessKey := .Values.postgresql.restore.s3.accessKey | required ".Values.postgresql.restore.s3.accessKey is required." -}}
{{- $encryptionKey := .Values.postgresql.restore.encryptionKey -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "hookDbRestore.name" . }}
  labels:
    {{- include "api.selectorLabels" . | nindent 4 }}
    {{- include "app.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
type: Opaque
data:
  database-url: {{ $databaseUrl | b64enc | quote }}
  s3-endpoint: {{ $s3_endpoint | b64enc | quote }}
  s3-bucket: {{ $s3_bucket | b64enc | quote }}
  s3-access-key-id: {{ $s3_accessKeyId | b64enc | quote }}
  s3-access-key: {{ $s3_accessKey | b64enc | quote }}
  {{- if $encryptionKey }}
  encryption-key: {{ $encryptionKey | b64enc | quote }}
  {{- end }}
{{- end }}

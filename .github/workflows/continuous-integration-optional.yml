name: CI (optional checks)

on:
  push:
    branches-ignore:
      - gh-readonly-queue/**
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  api-validate-composer-lock:
    name: 'Validate Api Platform composer.lock'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.11'
          tools: composer:2.6.0
          coverage: xdebug

      - run: composer validate -n --no-check-all --no-check-publish --strict
        working-directory: api

  api-psalm:
    name: 'Lint: API (psalm)'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.11'
          tools: composer:2.6.0
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "dir=$(composer config cache-files-dir)" | tr -d "\n" >> $GITHUB_OUTPUT'
        working-directory: api

      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --no-interaction --no-plugins --no-scripts --prefer-dist
        working-directory: api

      - run: composer psalm
        working-directory: api

  api-phpstan:
    name: 'Lint: API (phpstan)'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.11'
          tools: composer:2.6.0
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "dir=$(composer config cache-files-dir)" | tr -d "\n" >> $GITHUB_OUTPUT'
        working-directory: api

      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --no-interaction --no-plugins --no-scripts --prefer-dist
        working-directory: api

      - run: composer phpstan
        working-directory: api

  api-validate-migrations:
    name: 'API: validate migrations'
    runs-on: ubuntu-latest
    env:
      TEST_DATABASE_URL: postgresql://ecamp3:ecamp3@localhost:5432/ecamp3test?serverVersion=15&charset=utf8

    services:
      postgres:
        image: 'postgres:15-alpine'
        env:
          POSTGRES_DB: 'ecamp3test'
          POSTGRES_PASSWORD: 'ecamp3'
          POSTGRES_USER: 'ecamp3'
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.11'
          tools: composer:2.6.0
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "dir=$(composer config cache-files-dir)" | tr -d "\n" >> $GITHUB_OUTPUT'
        working-directory: api

      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --prefer-dist --no-progress --no-interaction
        working-directory: api

      - run: php bin/console doctrine:migrations:migrate --no-interaction -e test
        working-directory: api

      - run: php bin/console doctrine:schema:validate -v -e test
        working-directory: api

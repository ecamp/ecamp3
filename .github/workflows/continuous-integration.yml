name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  USER_ID: 1001

jobs:
  api-validate-composer-lock:
    name: "Validate Api Platform composer.lock"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1.1'
          tools: composer:2.2.0
          coverage: xdebug

      - run: composer validate -n --no-check-all --no-check-publish --strict
        working-directory: api

  api-cs-check:
    name: "Lint: API (php-cs-fixer)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1.1'
          tools: composer:2.2.0
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'
        working-directory: api

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --no-interaction --no-plugins --no-scripts --prefer-dist
        working-directory: api

      - run: php vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php -v --dry-run --diff
        working-directory: api

  frontend-eslint:
    name: "Lint: Frontend (ESLint)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.2'

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: frontend

      - run: npm run lint-check
        working-directory: frontend

  print-eslint:
    name: "Lint: Print (ESLint)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.2'

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: print

      - run: npm run lint
        working-directory: print

  api-tests:
    name: "Tests: API"
    runs-on: ubuntu-latest
    env:
      TEST_DATABASE_URL: postgresql://ecamp3:ecamp3@localhost:5432/ecamp3test?serverVersion=13&charset=utf8

    services:
      postgres:
        image: 'postgres:14-alpine@sha256:28e8ac42048c31694d443039d5adfe293f24eec7d8c0b4f88aaefcc8df1e5b72'
        env:
          POSTGRES_DB: 'ecamp3test'
          POSTGRES_PASSWORD: 'ecamp3'
          POSTGRES_USER: 'ecamp3'
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1.1'
          tools: composer:2.2.0
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'
        working-directory: api

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --prefer-dist --no-progress --no-interaction
        working-directory: api

      - run: |
          mkdir -p var/cache var/log
          jwt_passphrase=${JWT_PASSPHRASE:-$(grep ''^JWT_PASSPHRASE='' .env | cut -f 2 -d ''='')}
          echo "Generating public / private keys for JWT"
          mkdir -p config/jwt
          echo "$jwt_passphrase" | openssl genpkey -out config/jwt/private.pem -pass stdin -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096
          echo "$jwt_passphrase" | openssl pkey -in config/jwt/private.pem -passin stdin -out config/jwt/public.pem -pubout
          setfacl -R -m u:www-data:rX -m u:"$(whoami)":rwX config/jwt
          setfacl -dR -m u:www-data:rX -m u:"$(whoami)":rwX config/jwt
        working-directory: api

      - run: php bin/console doctrine:migrations:migrate --no-interaction -e test
        working-directory: api

      - run: composer test
        working-directory: api

      - name: send coveralls report
        run: |
          api/vendor/bin/php-coveralls  -r api \
                                            -v \
                                            --coverage_clover build/logs/clover.xml \
                                            --json_path build/logs/coveralls-upload.json
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: api

  frontend-tests:
    name: "Tests: Frontend"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.2'

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: frontend

      - run: npm run build
        working-directory: frontend

      - run: npm run test:unit
        working-directory: frontend

      - name: send coverage info
        run: cat frontend/data/coverage/lcov.info | npx coveralls .
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_NUMBER: ${{ github.run_id }}
          CI_PULL_REQUEST: ${{ github.event.number }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: frontend

  print-tests:
    name: "Tests: Print"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.2'

      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: print

      - run: npm run build
        working-directory: print

      - run: npm run test
        working-directory: print

      - run: cat print/coverage/lcov.info | npx coveralls .
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_NUMBER: ${{ github.run_id }}
          CI_PULL_REQUEST: ${{ github.event.number }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: print

  e2e-tests:
    name: "Tests: End-to-end"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - run: cp .env.ci .env

      - run: docker-compose up -d --build composer database php caddy frontend

      - run: bash wait-for-container-startup.sh

      - run: docker run -v $PWD:/e2e -w /e2e --network host -e CYPRESS_BASE_URL=http://localhost:3000 cypress/included:9.4.1
        working-directory: frontend

  coveralls-finished:
    name: "Finish coveralls report"
    needs:
      - api-tests
      - frontend-tests
      - print-tests
    runs-on: ubuntu-latest
    steps:

      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  ci-passed-event:
    name: "Send out CI success event"
    if: github.event_name == 'push' && (github.repository_owner == 'ecamp' || (github.event.pull_request && github.event.pull_request.number))
    needs:
      - api-cs-check
      - frontend-eslint
      - print-eslint
      - api-tests
      - frontend-tests
      - print-tests
      - e2e-tests
    runs-on: ubuntu-latest
    steps:

      - uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4 # renovate: tag=v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: ci-passed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

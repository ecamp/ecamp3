name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  backend-cs-check:
    name: "Lint: Backend (php-cs-fixer)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: OskarStark/php-cs-fixer-ga@2.18.1
        with:
          args: --dry-run --diff --config=backend/.php_cs

  frontend-eslint:
    name: "Lint: Frontend (ESLint)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: frontend

      - run: npm run lint
        working-directory: frontend

  print-eslint:
    name: "Lint: Print (ESLint)"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: print

      - run: npm run lint
        working-directory: print

  backend-tests:
    name: "Tests: Backend"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'
        working-directory: backend

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer install --no-interaction --no-plugins --no-scripts --prefer-dist --no-suggest
        working-directory: backend

      - run: composer test
        working-directory: backend

      - run: backend/vendor/bin/php-coveralls -v --coverage_clover backend/build/logs/clover.xml --json_path backend/build/logs/coveralls-upload.json
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: backend

  frontend-tests:
    name: "Tests: Frontend"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: frontend

      - run: npm run test:unit
        working-directory: frontend

      - run: cat frontend/data/coverage/lcov.info | npx coveralls .
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_NUMBER: ${{ github.run_id }}
          CI_PULL_REQUEST: ${{ github.event.number }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: frontend

  print-tests:
    name: "Tests: Print"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: print

      - run: npm run test
        working-directory: print

      - run: cat print/coverage/lcov.info | npx coveralls .
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_NUMBER: ${{ github.run_id }}
          CI_PULL_REQUEST: ${{ github.event.number }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: print

  e2e-tests:
    name: "Tests: End-to-end"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - run: cp .env.ci .env

      - run: docker-compose up -d --build composer backend frontend db

      - run: bash wait-for-container-startup.sh

      - run: docker run -v $PWD:/e2e -w /e2e --network host -e CYPRESS_BASE_URL=http://localhost:3000 cypress/included:6.3.0
        working-directory: frontend

  coveralls-finished:
    name: "Finish coveralls report"
    needs:
      - backend-tests
      - frontend-tests
      - print-tests
    runs-on: ubuntu-latest
    steps:

      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  ci-passed-event:
    name: "Send out CI success event"
    if: github.event_name == 'push' && github.repository_owner == 'ecamp'
    needs:
      - backend-cs-check
      - frontend-eslint
      - print-eslint
      - backend-tests
      - frontend-tests
      - print-tests
      - e2e-tests
    runs-on: ubuntu-latest
    steps:

      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: ci-passed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\DataPersister\Util\DataPersisterObservable:
        arguments: [ '@api_platform.doctrine.orm.data_persister' ]

    App\Validator\MaterialItemUpdateGroupSequence:
        public: true

    App\Validator\ColumnLayout\ColumnLayoutGroupSequence:
        public: true

    # Since the input filter classes are resolved at runtime instead
    # of with constructor dependency injection, we create a service
    # locator that will serve all the required classes
    App\Serializer\Denormalizer\InputFilterDenormalizer:
        arguments: [!tagged_locator { tag: 'app.input_filter' }]
    App\InputFilter\:
        resource: '../src/InputFilter/*Filter.php'
        exclude:
            - '../src/InputFilter/InputFilter.php'
        tags:
            - 'app.input_filter'

    App\Metadata\Resource\Factory\GraphQLSecurityResourceMetadataFactory:
        decorates: 'api_platform.metadata.resource.metadata_factory'

    App\Serializer\Normalizer\RelatedCollectionLinkNormalizer:
        decorates: 'api_platform.hal.normalizer.item'
        arguments:
            - '@.inner'
            - '@api_platform.route_name_resolver'
            - '@api_platform.filter_locator'
            - '@serializer.name_converter.metadata_aware'
            - '@Rize\UriTemplate'

    App\Serializer\Normalizer\CircularReferenceDetectingHalItemNormalizer:
        decorates: 'api_platform.hal.normalizer.item'

    App\Serializer\Normalizer\ContentTypeNormalizer:
        decorates: 'api_platform.hal.normalizer.item'

    App\Serializer\Normalizer\UriTemplateNormalizer:
        decorates: 'api_platform.hal.normalizer.entrypoint'

    App\Serializer\Normalizer\CollectionItemsNormalizer:
        decorates: 'api_platform.hal.normalizer.collection'

    App\Serializer\Normalizer\TranslationConstraintViolationListNormalizer:
        arguments:
            - '@api_platform.hydra.normalizer.constraint_violation_list'
            - '@api_platform.problem.normalizer.constraint_violation_list'

    App\Serializer\SerializerContextBuilder:
        decorates: 'api_platform.serializer.context_builder'

    App\Serializer\PreventAutomaticEmbeddingPropertyMetadataFactory:
        decorates: 'api_platform.metadata.property.metadata_factory.legacy'
        # Priority should be 1 lower than the one of SerializerPropertyMetadataFactory, see
        # https://github.com/api-platform/core/blob/main/src/Bridge/Symfony/Bundle/Resources/config/metadata/metadata.xml#L65
        decoration_priority: 29

    App\Serializer\Denormalizer\MaterialItemDenormalizer:
        tags:
            - { name: 'serializer.denormalizer', priority: 64 }

    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments:
            - '@.inner'
            - '%env(COOKIE_PREFIX)%'

    App\OpenApi\OAuthDecorator:
        decorates: 'api_platform.openapi.factory'

    App\OAuth\UrlGeneratorDecorator:
        class: App\OAuth\UrlGeneratorDecorator
        arguments:
            - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
            - "%kernel.environment%"

    knpu.oauth2.provider_factory:
        class: KnpU\OAuth2ClientBundle\DependencyInjection\ProviderFactory
        arguments:
            - '@App\OAuth\UrlGeneratorDecorator'

    App\Security\OAuth\GoogleAuthenticator:
        arguments:
            - '@lexik_jwt_authentication.handler.authentication_success'
            - '%env(COOKIE_PREFIX)%'

    App\Security\OAuth\HitobitoAuthenticator:
        arguments:
            - '@lexik_jwt_authentication.handler.authentication_success'
            - '%env(COOKIE_PREFIX)%'

    App\Security\ReCaptcha\ReCaptcha:
        public: true # necessary to be able to mock ReCaptcha in the container in Api tests
        arguments:
            - '%env(RECAPTCHA_SECRET)%'
            - '@ReCaptcha\ReCaptcha'
        
    App\Service\MailService:
        public: true
        arguments:
            - '@Symfony\Component\Mailer\MailerInterface'
            - '@translator'
            - "%env(FRONTEND_BASE_URL)%"
            - "%env(MAIL_FROM_EMAIL)%"
            - "%env(MAIL_FROM_NAME)%"

    App\Service\TranslateToAllLocalesService:
        public: true
        arguments:
            - '@translator'
            - '@translator'
            - '%env(csv:TRANSLATE_ERRORS_TO_LOCALES)%'

    App\EventListener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    # Entity Filter
    App\Doctrine\FilterByCurrentUserExtension:
        tags:
            # FilterEagerLoadingExtension has Priority -17 and breaks the DQL generated in ContentNodeRepository => Priority -20 ensures this runs after FilterEagerLoadingExtension
            - { name: api_platform.doctrine.orm.query_extension.collection, priority: -20 }
            - { name: api_platform.doctrine.orm.query_extension.item }

    App\Metadata\Resource\Factory\UriTemplateFactory:
        arguments:
            - '@api_platform.filter_locator'

    Symfony\Component\String\Inflector\EnglishInflector:
        public: false

    Rize\UriTemplate:
        public: false

    Symfony\Component\Serializer\Normalizer\DateTimeNormalizer:
        arguments:
            $defaultContext:
                # ensure, data coming from API without timezone information is interpreted as UTC
                # (e.g. period start '2021-01-01' in POST payload)
                datetime_timezone: 'UTC'

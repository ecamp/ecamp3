components:
  examples: []
  headers: []
  parameters: []
  requestBodies: []
  responses: []
  schemas:
    Activity-read:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          anyOf:
            -
              $ref: '#/components/schemas/Category-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity-read_ScheduleEntry.Activity:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read_ScheduleEntry.Activity'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity-write:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - category
        - location
        - title
      type: object
    Activity-write_create:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonhal-read:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          anyOf:
            -
              $ref: '#/components/schemas/Category.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonhal-read_ScheduleEntry.Activity:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read_ScheduleEntry.Activity'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonhal-write_create:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonld-read:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activityResponsibles:
          items:
            $ref: '#/components/schemas/ActivityResponsible.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          anyOf:
            -
              $ref: '#/components/schemas/Category.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          anyOf:
            -
              $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          nullable: true
          readOnly: true
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          items:
            $ref: '#/components/schemas/ScheduleEntry.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          readOnly: true
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonld-read_ScheduleEntry.Activity:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activityResponsibles:
          description: 'The list of people that are responsible for planning or carrying out this activity.'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        camp:
          description: 'The camp to which this activity belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          readOnly: true
          type: string
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read_ScheduleEntry.Activity'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - activityResponsibles
        - category
        - location
        - scheduleEntries
        - title
      type: object
    Activity.jsonld-write_create:
      deprecated: false
      description: 'A piece of programme that will be carried out once or multiple times in a camp.'
      properties:
        category:
          description: |-
            The category to which this activity belongs. The category determines color and numbering scheme
            of the activity, and is used for marking similar activities. Must be in the same camp as the activity.
          example: /categories/1a2b3c4d
          format: iri-reference
          type: string
        location:
          description: "The physical location where this activity's programme will be carried out."
          example: Spielwiese
          maxLength: 64
          type: string
        progressLabel:
          description: 'The current assigned ProgressLabel.'
          example: /progress_labels/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        scheduleEntries:
          description: "The list of points in time when this activity's programme will be carried out."
          example:
            -
              end: '2023-05-01T16:00:00+00:00'
              period: /periods/1a2b3c4a
              start: '2023-05-01T15:00:00+00:00'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        title:
          description: 'The title of this activity that is shown in the picasso.'
          example: Sportolympiade
          maxLength: 32
          type: string
      required:
        - category
        - location
        - scheduleEntries
        - title
      type: object
    ActivityProgressLabel-read:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel-write:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - position
        - title
      type: object
    ActivityProgressLabel-write_create:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonhal-read:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonhal-write_create:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonld-read:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityProgressLabel.jsonld-write_create:
      deprecated: false
      description: |-
        Progress labels in a camp.
        To each activity one label can be assigned.
      properties:
        camp:
          description: 'The camp to which this label belongs.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        position:
          default: -1
          example: -1
          type: integer
        title:
          example: Planned
          maxLength: 32
          type: string
      required:
        - camp
        - position
        - title
      type: object
    ActivityResponsible-read:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible-write:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonhal-read:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonhal-write:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonld-read:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    ActivityResponsible.jsonld-write:
      deprecated: false
      description: 'A person that is responsible for planning or carrying out an activity.'
      properties:
        activity:
          description: 'The activity that the person is responsible for.'
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The person that is responsible. Must be a collaborator in the same camp as the activity.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - activity
        - campCollaboration
      type: object
    Camp-read:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          description: |-
            The people working on planning and carrying out the camp. Only collaborators have access
            to the camp's contents.
          items:
            $ref: '#/components/schemas/CampCollaboration-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          items:
            $ref: '#/components/schemas/Period-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp-write_create:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campPrototype:
          description: 'The prototype camp that will be used as a template to create this camp.'
          format: iri-reference
          nullable: true
          type: string
          writeOnly: true
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        couponKey:
          description: |-
            Camp Coupon Key
            If a COUPON_SECRET is configured, a valid Coupon is required.
          maxLength: 128
          nullable: true
          type: string
          writeOnly: true
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - name
        - periods
        - printYSLogoOnPicasso
        - title
      type: object
    Camp-write_update:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - name
        - printYSLogoOnPicasso
        - title
      type: object
    Camp.jsonhal-read:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          description: |-
            The people working on planning and carrying out the camp. Only collaborators have access
            to the camp's contents.
          items:
            $ref: '#/components/schemas/CampCollaboration.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          items:
            $ref: '#/components/schemas/Period.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonhal-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonhal-write_create:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campPrototype:
          description: 'The prototype camp that will be used as a template to create this camp.'
          format: iri-reference
          nullable: true
          type: string
          writeOnly: true
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        couponKey:
          description: |-
            Camp Coupon Key
            If a COUPON_SECRET is configured, a valid Coupon is required.
          maxLength: 128
          nullable: true
          type: string
          writeOnly: true
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - name
        - periods
        - printYSLogoOnPicasso
        - title
      type: object
    Camp.jsonld-read:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          description: |-
            The people working on planning and carrying out the camp. Only collaborators have access
            to the camp's contents.
          items:
            $ref: '#/components/schemas/CampCollaboration.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          items:
            $ref: '#/components/schemas/Period.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonld-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonld-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activities:
          description: |-
            All the programme that will be carried out during the camp. An activity may be carried out
            multiple times in the same camp.
          example: '/activities?camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campCollaborations:
          items:
            format: iri-reference
            type: string
          type: array
        categories:
          description: 'Types of programme, such as sports activities or meal times.'
          example: '["/categories/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        creator:
          description: |-
            The person that created the camp. This value never changes, even when the person
            leaves the camp.
          format: iri-reference
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        isPrototype:
          description: 'Whether this camp may serve as a template for creating other camps.'
          example: true
          readOnly: true
          type: boolean
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        materialLists:
          description: |-
            Lists for collecting the required materials needed for carrying out the programme. Each collaborator
            has a material list, and there may be more, such as shopping lists.
          example: '["/material_lists/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        profiles:
          description: 'All profiles of the users collaborating in this camp.'
          example: '/profiles?user.collaborations.camp=%2Fcamps%2F1a2b3c4d'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        progressLabels:
          description: 'All the progress labels within this camp.'
          example: '["/progress_labels/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - activities
        - campCollaborations
        - categories
        - materialLists
        - name
        - periods
        - printYSLogoOnPicasso
        - progressLabels
        - title
      type: object
    Camp.jsonld-write_create:
      deprecated: false
      description: |-
        The main entity that eCamp is designed to manage. Contains programme which may be
        distributed across multiple time periods.
      properties:
        addressCity:
          description: 'The name of the town where the camp will take place.'
          example: Hintertüpfingen
          maxLength: 128
          nullable: true
          type: string
        addressName:
          description: 'A textual description of the location of the camp.'
          example: 'Wiese hinter der alten Mühle'
          maxLength: 128
          nullable: true
          type: string
        addressStreet:
          description: 'The street name and number (if any) of the location of the camp.'
          example: 'Schönriedweg 23'
          maxLength: 128
          nullable: true
          type: string
        addressZipcode:
          description: 'The zipcode of the location of the camp.'
          example: '1234'
          maxLength: 128
          nullable: true
          type: string
        campPrototype:
          description: 'The prototype camp that will be used as a template to create this camp.'
          format: iri-reference
          nullable: true
          type: string
          writeOnly: true
        coachName:
          description: 'The name of the Y+S coach who is in charge of the camp.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
        couponKey:
          description: |-
            Camp Coupon Key
            If a COUPON_SECRET is configured, a valid Coupon is required.
          maxLength: 128
          nullable: true
          type: string
          writeOnly: true
        courseKind:
          description: 'The official name for the type of this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        courseNumber:
          description: 'The official course number, identifying this course.'
          example: 'PBS AG 123-23'
          maxLength: 64
          nullable: true
          type: string
        kind:
          description: 'Rough categorization of the camp (house, tent, traveling, summer, autumn).'
          example: Zeltlager
          maxLength: 64
          nullable: true
          type: string
        motto:
          description: "The thematic topic (if any) of the camp's programme and storyline."
          example: Piraten
          maxLength: 128
          nullable: true
          type: string
        name:
          description: 'A short name for the camp.'
          example: 'SoLa 2022'
          maxLength: 32
          type: string
        organizer:
          description: 'The name of the organization which plans and carries out the camp.'
          example: 'Pfadi Luftig'
          maxLength: 64
          nullable: true
          type: string
        periods:
          description: 'The time periods of the camp, there must be at least one. Periods in a camp may not overlap.'
          example:
            -
              description: Hauptlager
              end: '2022-01-08'
              start: '2022-01-01'
          items:
            format: iri-reference
            type: string
          minItems: 1
          type: array
        printYSLogoOnPicasso:
          description: 'Whether the Y+S logo should be printed on the picasso of this camp.'
          example: true
          type: boolean
        title:
          description: 'The full title of the camp.'
          example: 'Abteilungs-Sommerlager 2022'
          maxLength: 32
          type: string
        trainingAdvisorName:
          description: 'The name of the training advisor who is in charge of the course.'
          example: 'Albert Anderegg'
          maxLength: 64
          nullable: true
          type: string
      required:
        - name
        - periods
        - printYSLogoOnPicasso
        - title
      type: object
    CampCollaboration-read:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration-resend_invitation:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      type: object
    CampCollaboration-write_create:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
      type: object
    CampCollaboration-write_update:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
      required:
        - role
        - status
      type: object
    CampCollaboration.jsonhal-read:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonhal-write_create:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
      type: object
    CampCollaboration.jsonld-read:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonld-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp.jsonld-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        status:
          default: invited
          description: 'Indicates whether the collaborator is still invited, has left the camp, or is participating normally.'
          enum:
            - established
            - inactive
            - invited
          example: inactive
          maxLength: 16
          type: string
        user:
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonld-read_CampCollaboration.Camp_CampCollaboration.User'
          nullable: true
          readOnly: true
      required:
        - camp
        - role
        - status
      type: object
    CampCollaboration.jsonld-write_create:
      deprecated: false
      description: 'A user participating in some way in the planning or realization of a camp.'
      properties:
        camp:
          description: 'The camp that the collaborator is part of. Cannot be changed once the campCollaboration is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        inviteEmail:
          description: |-
            The receiver email address of the invitation email, in case the collaboration does not yet have
            a user account. Either this field or the user field should be null.
          example: some-email@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        role:
          description: |-
            The role that this person has in the camp. Depending on the role, the collaborator might have
            different access rights. There must always be at least one manager in a camp.
          enum:
            - guest
            - manager
            - member
          example: member
          maxLength: 16
          type: string
        user:
          description: 'The person that is collaborating in the camp. Cannot be changed once the campCollaboration is established.'
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
      required:
        - camp
        - role
      type: object
    Category-read:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          items:
            $ref: '#/components/schemas/ContentType-read_Category.PreferredContentTypes_Category.ContentNodes'
          readOnly: true
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category-write_create:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category-write_update:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonhal-read:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          items:
            $ref: '#/components/schemas/ContentType.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes'
          readOnly: true
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonhal-write_create:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonld-read:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        contentNodes:
          description: 'All the content nodes that make up the tree of programme content.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          items:
            $ref: '#/components/schemas/ContentType.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes'
          readOnly: true
          type: array
        rootContentNode:
          $ref: '#/components/schemas/ColumnLayout.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: |-
            The programme contents, organized as a tree of content nodes. The root content node cannot be
            exchanged, but all the contents attached to it can.
          example: /content_nodes/1a2b3c4d
          readOnly: true
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    Category.jsonld-write_create:
      deprecated: false
      description: |-
        A type of programme, such as sports activities or meal times, is called a category. A category
        determines color and numbering scheme of the associated activities, and is used for marking
        "similar" activities. A category may contain some skeleton programme which is used as a blueprint
        when creating a new activity in the category.
      properties:
        camp:
          description: 'The camp to which this category belongs. May not be changed once the category is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        color:
          description: 'The color of the activities in this category, as a hex color string.'
          example: '#4DBB52'
          maxLength: 8
          pattern: '^(#[0-9a-zA-Z]{6})$'
          type: string
        name:
          description: 'The full name of the category.'
          example: Lagersport
          maxLength: 32
          type: string
        numberingStyle:
          default: '1'
          description: |-
            Specifies whether the schedule entries of the activities in this category should be numbered
            using arabic numbers, roman numerals or letters.
          enum:
            - '1'
            - A
            - I
            - a
            - i
          example: '1'
          maxLength: 1
          type: string
        preferredContentTypes:
          description: 'The content types that are most likely to be useful for planning programme of this category.'
          example: '["/content_types/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          type: array
        short:
          description: |-
            An abbreviated name of the category, for display in tight spaces, often together with the day and
            schedule entry number, e.g. LS 3.a, where LS is the category's short name.
          example: LS
          maxLength: 16
          type: string
      required:
        - camp
        - color
        - name
        - numberingStyle
        - preferredContentTypes
        - short
      type: object
    ColumnLayout-read:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout-read_ScheduleEntry.Activity:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    ColumnLayout-write_update:
      deprecated: false
      description: ''
      properties:
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - data
        - position
      type: object
    ColumnLayout.jsonhal-read:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonhal-read_ScheduleEntry.Activity:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonhal-write_create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    ColumnLayout.jsonld-read:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonld-read_ScheduleEntry.Activity:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    ColumnLayout.jsonld-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"columns":[{"slot":"1","width":6},{"slot":"2","width":6}]}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            columns:
              -
                slot: '1'
                width: 12
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    ContentNode-read:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonhal-read:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonld-read:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentNode.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        A piece of information that is part of a programme. ContentNodes may store content such as
        one or multiple free text fields, or any other necessary data. Content nodes may also be used
        to define layouts. For this purpose, a content node may offer so-called slots, into which other
        content nodes may be inserted. In return, a content node may be nested inside a slot in a parent
        container content node. This way, a tree of content nodes makes up a complete programme.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: 'Holds the actual data of the content node.'
          example:
            text: 'dummy text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    ContentType-read:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    ContentType-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    ContentType.jsonhal-read:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    ContentType.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    ContentType.jsonld-read:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    ContentType.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes:
      deprecated: false
      description: |-
        Defines a type of content that can be present in a content node tree. A content type
        determines what data can be stored in content nodes of this type, as well as validation,
        available slots and jsonConfig settings.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        active:
          default: true
          description: 'Whether this content type is still maintained and recommended for use in new camps.'
          example: 'true'
          readOnly: true
          type: boolean
        contentNodes:
          description: 'API endpoint link for creating new entities of type entityClass.'
          example: '/content_node/column_layouts?contentType=%2Fcontent_types%2F1a2b3c4d'
          format: iri-reference
          items:
            type: string
          readOnly: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        name:
          description: |-
            A name in UpperCamelCase of the content type. This value may be used as a technical
            identifier of this content type, it is guaranteed to stay fixed.
          example: SafetyConcept
          maxLength: 32
          readOnly: true
          type: string
      required:
        - active
        - name
      type: object
    Credentials:
      properties:
        identifier:
          example: test@example.com
          type: string
        password:
          example: test
          type: string
      type: object
    Day-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day-read_Day.DayResponsibles:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          items:
            $ref: '#/components/schemas/DayResponsible-read_Day.DayResponsibles'
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonhal-read_Day.DayResponsibles:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          items:
            $ref: '#/components/schemas/DayResponsible.jsonhal-read_Day.DayResponsibles'
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonhal-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonld-read_Day.DayResponsibles:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          items:
            $ref: '#/components/schemas/DayResponsible.jsonld-read_Day.DayResponsibles'
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    Day.jsonld-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A day in a time period of a camp. This is represented as a reference to the time period
        along with a number of days offset from the period's starting date. This is to make it
        easier to move the whole periods to different dates. Days are created automatically when
        creating or updating periods, and are not writable through the API directly.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dayOffset:
          description: "The 0-based offset in days from the period's start date when this day starts."
          example: '1'
          readOnly: true
          type: integer
        dayResponsibles:
          description: 'The list of people who have a whole-day responsibility on this day.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        end:
          description: 'The end date and time of the day. This is a read-only convenience property.'
          example: '2022-01-03T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        number:
          description: 'The 1-based cardinal number of the day in the period. Not unique within the camp.'
          example: '2'
          readOnly: true
          type: integer
        period:
          description: 'The time period that this day belongs to.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntries:
          description: "All scheduleEntries in this day's period which overlap with this day (using midnight as cutoff)."
          example: '/schedule_entries?period=%2Fperiods%2F1a2b3c4d&start%5Bstrictly_before%5D=2022-01-03T00%3A00%3A00%2B00%3A00&end%5Bafter%5D=2022-01-02T00%3A00%3A00%2B00%3A00'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The start date and time of the day. This is a read-only convenience property.'
          example: '2022-01-02T00:00:00+00:00'
          format: date
          nullable: true
          readOnly: true
          type: string
      required:
        - dayOffset
        - dayResponsibles
        - period
      type: object
    DayResponsible-read:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible-read_Day.DayResponsibles:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible-write:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonhal-read:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonhal-read_Day.DayResponsibles:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonhal-write:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonld-read:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonld-read_Day.DayResponsibles:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
      required:
        - campCollaboration
        - day
      type: object
    DayResponsible.jsonld-write:
      deprecated: false
      description: 'A person that has some whole-day responsibility on a day in the camp.'
      properties:
        campCollaboration:
          description: "The person that is responsible. Must belong to the same camp as the day's period."
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which the person is responsible.'
          example: /days/1a2b3c4d
          format: iri-reference
          type: string
      required:
        - campCollaboration
        - day
      type: object
    Invitation:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    Invitation-read:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    Invitation-write:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      type: object
    Invitation.jsonhal:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    Invitation.jsonhal-read:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    Invitation.jsonld:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    Invitation.jsonld-read:
      deprecated: false
      description: |-
        An invitation for a person to collaborate in a camp. The person may or may not
        already have an account.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        campId:
          description: |-
            The id of the camp for which this invitation is valid. This is useful for
            redirecting the user to the correct place after they accept.
          example: 1a2b3c4d
          type: string
        campTitle:
          description: |-
            The full title of the camp for which this invitation is valid. This should help
            the user to decide whether to accept or reject the invitation.
          example: 'Abteilungs-Sommerlager 2022'
          type: string
        userAlreadyInCamp:
          description: |-
            Indicates whether the logged in user is already collaborating in the camp, and
            can therefore not accept the invitation.
          nullable: true
          type: boolean
        userDisplayName:
          description: |-
            The display name of the user that is invited. May be null in case the user does
            not already have an account.
          example: 'Robert Baden-Powell'
          nullable: true
          type: string
      type: object
    MaterialItem-read:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          maxLength: 64
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          maxLength: 32
          nullable: true
          type: string
      required:
        - article
        - materialList
      type: object
    MaterialItem-write:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          nullable: true
          type: string
      type: object
    MaterialItem.jsonhal-read:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          maxLength: 64
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          maxLength: 32
          nullable: true
          type: string
      required:
        - article
        - materialList
      type: object
    MaterialItem.jsonhal-write:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          maxLength: 64
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          maxLength: 32
          nullable: true
          type: string
      required:
        - article
        - materialList
      type: object
    MaterialItem.jsonld-read:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          maxLength: 64
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          maxLength: 32
          nullable: true
          type: string
      required:
        - article
        - materialList
      type: object
    MaterialItem.jsonld-write:
      deprecated: false
      description: 'A physical item that is needed for carrying out a programme or camp.'
      properties:
        article:
          description: 'The name of the item that is required.'
          example: Volleyball
          maxLength: 64
          type: string
        materialList:
          description: |-
            The list to which this item belongs. Lists are used to keep track of who is
            responsible to prepare and bring the item to the camp.
          example: /material_lists/1a2b3c4d
          format: iri-reference
          type: string
        materialNode:
          description: 'The content node to which this item belongs, if it does not belong to a period.'
          example: /content_node/material_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        period:
          description: 'The period to which this item belongs, if it does not belong to a content node.'
          example: /periods/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        quantity:
          description: 'The number of items or the amount in the unit of items that are required.'
          example: 1.5
          nullable: true
          type: number
        unit:
          description: 'An optional unit for measuring the amount of items required.'
          example: kg
          maxLength: 32
          nullable: true
          type: string
      required:
        - article
        - materialList
      type: object
    MaterialList-read:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The campCollaboration this material list belongs to.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        itemCount:
          example: 3
          readOnly: true
          type: integer
        materialItems:
          description: 'The items that are part of this list.'
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - materialItems
        - name
      type: object
    MaterialList-write:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - name
      type: object
    MaterialList-write_create:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - name
      type: object
    MaterialList.jsonhal-read:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The campCollaboration this material list belongs to.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        itemCount:
          example: 3
          readOnly: true
          type: integer
        materialItems:
          description: 'The items that are part of this list.'
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - materialItems
        - name
      type: object
    MaterialList.jsonhal-write_create:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - name
      type: object
    MaterialList.jsonld-read:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        campCollaboration:
          description: 'The campCollaboration this material list belongs to.'
          example: /camp_collaborations/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        itemCount:
          example: 3
          readOnly: true
          type: integer
        materialItems:
          description: 'The items that are part of this list.'
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - materialItems
        - name
      type: object
    MaterialList.jsonld-write_create:
      deprecated: false
      description: |-
        A list of material items that someone needs to bring to the camp. A material list
        is automatically created for each person collaborating on the camp.
      properties:
        camp:
          description: 'The camp this material list belongs to.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        name:
          description: 'The human readable name of the material list.'
          example: Lebensmittel
          maxLength: 32
          nullable: true
          type: string
      required:
        - camp
        - name
      type: object
    MaterialNode-read:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        materialItems:
          items:
            $ref: '#/components/schemas/MaterialItem-read'
          type: array
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - materialItems
        - position
      type: object
    MaterialNode-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    MaterialNode-write_update:
      deprecated: false
      description: ''
      properties:
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - position
      type: object
    MaterialNode.jsonhal-read:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        materialItems:
          items:
            $ref: '#/components/schemas/MaterialItem.jsonhal-read'
          type: array
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - materialItems
        - position
      type: object
    MaterialNode.jsonhal-write_create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    MaterialNode.jsonld-read:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        materialItems:
          items:
            $ref: '#/components/schemas/MaterialItem.jsonld-read'
          type: array
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - materialItems
        - position
      type: object
    MaterialNode.jsonld-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    MultiSelect-read:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    MultiSelect-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    MultiSelect-write_update:
      deprecated: false
      description: ''
      properties:
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - data
        - position
      type: object
    MultiSelect.jsonhal-read:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    MultiSelect.jsonhal-write_create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    MultiSelect.jsonld-read:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    MultiSelect.jsonld-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            options:
              natureAndEnvironment:
                checked: true
              outdoorTechnique:
                checked: false
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    Period-read:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          description: 'The days in this time period. These are generated automatically.'
          example: '["/days?period=/periods/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp-read_Period.Camp_Period.Days'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day-read_Period.Camp_Period.Days'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period-write:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        moveScheduleEntries:
          default: true
          description: |-
            If the start date of the period is changing, moveScheduleEntries defines what happens with the schedule
            entries in the period.
          example: true
          type: boolean
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - description
        - end
        - moveScheduleEntries
        - start
      type: object
    Period-write_create:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        moveScheduleEntries:
          default: true
          description: |-
            If the start date of the period is changing, moveScheduleEntries defines what happens with the schedule
            entries in the period.
          example: true
          type: boolean
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - description
        - end
        - moveScheduleEntries
        - start
      type: object
    Period.jsonhal-read:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          description: 'The days in this time period. These are generated automatically.'
          example: '["/days?period=/periods/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonhal-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp.jsonhal-read_Period.Camp_Period.Days'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day.jsonhal-read_Period.Camp_Period.Days'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonhal-write_create:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        moveScheduleEntries:
          default: true
          description: |-
            If the start date of the period is changing, moveScheduleEntries defines what happens with the schedule
            entries in the period.
          example: true
          type: boolean
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - description
        - end
        - moveScheduleEntries
        - start
      type: object
    Period.jsonld-read:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          description: 'The days in this time period. These are generated automatically.'
          example: '["/days?period=/periods/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonld-read_Period.Camp_Period.Days:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        camp:
          anyOf:
            -
              $ref: '#/components/schemas/Camp.jsonld-read_Period.Camp_Period.Days'
          nullable: true
          readOnly: true
        contentNodes:
          description: 'All the content nodes used in some activity which is carried out (has a schedule entry) in this period.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        dayResponsibles:
          description: 'A link to all the DayResponsibles in this period.'
          example: '["/day_responsibles/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        days:
          items:
            $ref: '#/components/schemas/Day.jsonld-read_Period.Camp_Period.Days'
          readOnly: true
          type: array
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        materialItems:
          description: |-
            Material items that are assigned directly to the period, as opposed to individual
            activities.
          example: '["/material_items/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        scheduleEntries:
          description: |-
            All time slots for programme that are part of this time period. A schedule entry
            may span over multiple days, but may not end later than the period.
          example: '["/schedule_entries/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - days
        - description
        - end
        - materialItems
        - scheduleEntries
        - start
      type: object
    Period.jsonld-write_create:
      deprecated: false
      description: |-
        A time period in which the programme of a camp will take place. There may be multiple
        periods in a camp, but they may not overlap. A period is made up of one or more full days.
      properties:
        camp:
          description: 'The camp that this time period belongs to. Cannot be changed once the period is created.'
          example: /camps/1a2b3c4d
          format: iri-reference
          type: string
        description:
          description: 'A free text name for the period. Useful to distinguish multiple periods in the same camp.'
          example: Hauptlager
          maxLength: 32
          nullable: true
          type: string
        end:
          description: |-
            The (inclusive) day at the end of which the period ends, as an ISO date string. Should
            not be before "start".
          example: '2022-01-08'
          format: date
          type: string
        moveScheduleEntries:
          default: true
          description: |-
            If the start date of the period is changing, moveScheduleEntries defines what happens with the schedule
            entries in the period.
          example: true
          type: boolean
        start:
          description: 'The day on which the period starts, as an ISO date string. Should not be after "end".'
          example: '2022-01-01'
          format: date
          type: string
      required:
        - camp
        - description
        - end
        - moveScheduleEntries
        - start
      type: object
    Profile-read:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    Profile-read_User.create:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    Profile-write_update:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        newEmail:
          description: 'New email.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          nullable: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        untrustedEmailKey:
          description: 'User input for email verification.'
          nullable: true
          type: string
          writeOnly: true
      type: object
    Profile.jsonhal-read:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    Profile.jsonhal-read_User.create:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    Profile.jsonld-read:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    Profile.jsonld-read_User.create:
      deprecated: false
      description: |-
        The profile of a person using eCamp.
        The properties available to related eCamp users are here.
        Related means that they were or are collaborators in the same camp.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          description: 'Unique email of the user.'
          example: bi-pi@example.com
          externalDocs:
            url: 'https://schema.org/email'
          format: email
          maxLength: 64
          type: string
        firstname:
          description: "The user's (optional) first name."
          example: Robert
          maxLength: 64
          nullable: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        language:
          description: 'The optional preferred language of the user, as an ICU language code.'
          enum:
            - de
            - de-CH-scout
            - en
            - en-CH-scout
            - fr
            - fr-CH-scout
            - it
            - it-CH-scout
          example: en
          maxLength: 20
          nullable: true
          type: string
        legalName:
          description: |-
            The legal name of the user, for printing on legally relevant
            documents. Falls back to the nickname if not complete.
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        nickname:
          description: "The user's (optional) nickname or scout name."
          example: Bi-Pi
          maxLength: 32
          nullable: true
          type: string
        surname:
          description: "The user's (optional) last name."
          example: Baden-Powell
          maxLength: 64
          nullable: true
          type: string
        user:
          example: /users/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
        - email
      type: object
    ResetPassword:
      deprecated: false
      description: ''
      properties:
        email:
          nullable: true
          type: string
        id:
          description: "$id: base64_encode($email . '#' . $resetKey)."
          nullable: true
          readOnly: true
          type: string
        password:
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword-create:
      deprecated: false
      description: ''
      properties:
        email:
          nullable: true
          type: string
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword-update:
      deprecated: false
      description: ''
      properties:
        password:
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword.jsonhal:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        email:
          nullable: true
          type: string
        id:
          description: "$id: base64_encode($email . '#' . $resetKey)."
          nullable: true
          readOnly: true
          type: string
        password:
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword.jsonhal-create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        email:
          nullable: true
          type: string
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword.jsonld:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          nullable: true
          type: string
        id:
          description: "$id: base64_encode($email . '#' . $resetKey)."
          nullable: true
          readOnly: true
          type: string
        password:
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ResetPassword.jsonld-create:
      deprecated: false
      description: ''
      properties:
        email:
          nullable: true
          type: string
        recaptchaToken:
          nullable: true
          type: string
          writeOnly: true
      type: object
    ScheduleEntry-read:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry-read_ScheduleEntry.Activity:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          anyOf:
            -
              $ref: '#/components/schemas/Activity-read_ScheduleEntry.Activity'
          nullable: true
          readOnly: true
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry-write:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry-write_create:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry.jsonhal-read:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonhal-read_ScheduleEntry.Activity:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          anyOf:
            -
              $ref: '#/components/schemas/Activity.jsonhal-read_ScheduleEntry.Activity'
          nullable: true
          readOnly: true
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonhal-write_create:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry.jsonld-read:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    ScheduleEntry.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonld-read_ScheduleEntry.Activity:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        activity:
          anyOf:
            -
              $ref: '#/components/schemas/Activity.jsonld-read_ScheduleEntry.Activity'
          nullable: true
          readOnly: true
        day:
          description: 'The day on which this schedule entry starts.'
          example: /days/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        dayNumber:
          description: 'The day number of the day on which this schedule entry starts.'
          example: '1'
          readOnly: true
          type: integer
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        number:
          description: |-
            Uniquely identifies this schedule entry in the period. This uses the day number, followed
            by a period, followed by the cardinal number of the schedule entry in the numbering scheme
            defined by the activity's category.
          example: 1.b
          readOnly: true
          type: string
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        scheduleEntryNumber:
          description: |-
            The cardinal number of this schedule entry, when chronologically ordering all
            schedule entries that start on the same day. I.e. if the schedule entry is the
            second entry on a given day, its number will be 2.
          example: '2'
          readOnly: true
          type: integer
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - activity
        - end
        - start
      type: object
    ScheduleEntry.jsonld-write_create:
      deprecated: false
      description: |-
        A calendar event in a period of the camp, at which some activity will take place. The start time
        is specified as an offset in minutes from the period's start time.
      properties:
        activity:
          description: |-
            The activity that will take place at the time defined by this schedule entry. Can not be changed
            once the schedule entry is created.
          example: /activities/1a2b3c4d
          format: iri-reference
          type: string
        end:
          description: 'End date and time of the schedule entry.'
          example: '2022-01-02T01:30:00+00:00'
          format: date-time
          type: string
        left:
          description: |-
            When rendering a period in a calendar view: Specifies how far offset the rendered calendar event
            should be from the left border of the day column, as a fractional amount of the width of the whole
            day. This is useful to arrange multiple overlapping schedule entries such that all of them are
            visible. Should be a decimal number between 0 and 1, and left+width should not exceed 1, but the
            API currently does not enforce this.
          example: 0.6
          nullable: true
          type: number
        period:
          description: 'The time period which this schedule entry is part of. Must belong to the same camp as the activity.'
          example: /periods/1a2b3c4d
          format: iri-reference
          type: string
        start:
          description: 'Start date and time of the schedule entry.'
          example: '2022-01-02T00:00:00+00:00'
          format: date-time
          type: string
        width:
          default: 1.0
          description: |-
            When rendering a period in a calendar view: Specifies how wide the rendered calendar event should
            be, as a fractional amount of the width of the whole day. This is useful to arrange multiple
            overlapping schedule entries such that all of them are visible. Should be a decimal number
            between 0 and 1, and left+width should not exceed 1, but the API currently does not enforce this.
          example: 0.4
          nullable: true
          type: number
      required:
        - end
        - start
      type: object
    SingleText-read:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    SingleText-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    SingleText-write_update:
      deprecated: false
      description: ''
      properties:
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - data
        - position
      type: object
    SingleText.jsonhal-read:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    SingleText.jsonhal-write_create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    SingleText.jsonld-read:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - data
        - position
      type: object
    SingleText.jsonld-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          default: '{"html":""}'
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            html: 'my example text'
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - data
        - parent
        - position
      type: object
    Storyboard-read:
      deprecated: false
      description: ''
      properties:
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    Storyboard-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    Storyboard-write_update:
      deprecated: false
      description: ''
      properties:
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - data
        - position
      type: object
    Storyboard.jsonhal-read:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    Storyboard.jsonhal-write_create:
      deprecated: false
      description: ''
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    Storyboard.jsonld-read:
      deprecated: false
      description: ''
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        children:
          description: 'All content nodes that are direct children of this content node.'
          example: '["/content_nodes/1a2b3c4d"]'
          items:
            format: iri-reference
            type: string
          readOnly: true
          type: array
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        contentTypeName:
          description: 'The name of the content type of this content node. Read-only, for convenience.'
          example: SafetyConcept
          readOnly: true
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        root:
          description: |-
            The content node that is the root of the content node tree. Refers to itself in case this
            content node is the root.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - children
        - contentType
        - position
      type: object
    Storyboard.jsonld-write_create:
      deprecated: false
      description: ''
      properties:
        contentType:
          description: |-
            Defines the type of this content node. There is a fixed list of types that are implemented
            in eCamp. Depending on the type, different content data and different slots may be allowed
            in a content node. The content type may not be changed once the content node is created.
          example: /content_types/1a2b3c4d
          format: iri-reference
          type: string
        data:
          description: |-
            Holds the actual data of the content node
            (overridden from abstract class in order to add specific validation).
          example:
            sections:
              186b7ff2-7470-4de4-8783-082c2c189fcd:
                column1: ''
                column2Html: ''
                column3: ''
                position: 0
          items:
            type: string
          nullable: true
          type: array
        instanceName:
          description: |-
            An optional name for this content node. This is useful when planning e.g. an alternative
            version of the programme suited for bad weather, in addition to the normal version.
          example: Schlechtwetterprogramm
          maxLength: 32
          nullable: true
          type: string
        parent:
          description: |-
            The parent to which this content node belongs. Is null in case this content node is the
            root of a content node tree. For non-root content nodes, the parent can be changed, as long
            as the new parent is in the same camp as the old one.
          example: /content_nodes/1a2b3c4d
          format: iri-reference
          nullable: true
          type: string
        position:
          default: -1
          description: |-
            A whole number used for ordering multiple content nodes that are in the same slot of the
            same parent. The API does not guarantee the uniqueness of parent+slot+position.
          example: -1
          type: integer
        slot:
          description: |-
            The name of the slot in the parent in which this content node resides. The valid slot names
            are defined by the content type of the parent.
          example: '1'
          maxLength: 32
          nullable: true
          type: string
      required:
        - contentType
        - parent
        - position
      type: object
    User-activate:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        activationKey:
          description: 'User-Input for activation.'
          nullable: true
          type: string
          writeOnly: true
      type: object
    User-read:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User-read_User.create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/Profile-read_User.create'
          readOnly: true
      required:
        - profile
      type: object
    User-write:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        password:
          description: |-
            A new password for this user. At least 12 characters, as is explicitly recommended by OWASP:
            https://github.com/OWASP/ASVS/blob/master/4.0/en/0x11-V2-Authentication.md#v21-password-security
            2.1.1: Verify that user set passwords are at least 12 characters in length (after multiple spaces are combined).
          example: learning-by-doing-101
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
      type: object
    User-write_create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        password:
          description: |-
            A new password for this user. At least 12 characters, as is explicitly recommended by OWASP:
            https://github.com/OWASP/ASVS/blob/master/4.0/en/0x11-V2-Authentication.md#v21-password-security
            2.1.1: Verify that user set passwords are at least 12 characters in length (after multiple spaces are combined).
          example: learning-by-doing-101
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
        recaptchaToken:
          description: 'ReCaptchaToken used on Register-View.'
          nullable: true
          type: string
          writeOnly: true
      required:
        - password
        - profile
      type: object
    User.jsonhal-read:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonhal-read_User.create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/Profile.jsonhal-read_User.create'
          readOnly: true
      required:
        - profile
      type: object
    User.jsonhal-write_create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        _links:
          properties:
            self:
              properties:
                href:
                  format: iri-reference
                  type: string
              type: object
          type: object
        password:
          description: |-
            A new password for this user. At least 12 characters, as is explicitly recommended by OWASP:
            https://github.com/OWASP/ASVS/blob/master/4.0/en/0x11-V2-Authentication.md#v21-password-security
            2.1.1: Verify that user set passwords are at least 12 characters in length (after multiple spaces are combined).
          example: learning-by-doing-101
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
        recaptchaToken:
          description: 'ReCaptchaToken used on Register-View.'
          nullable: true
          type: string
          writeOnly: true
      required:
        - password
        - profile
      type: object
    User.jsonld-read:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonld-read_CampCollaboration.Camp_CampCollaboration.User:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
      type: object
    User.jsonld-read_User.create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        '@context':
          oneOf:
            -
              additionalProperties: true
              properties:
                '@vocab':
                  type: string
                hydra:
                  enum: ['http://www.w3.org/ns/hydra/core#']
                  type: string
              required:
                - '@vocab'
                - hydra
              type: object
            -
              type: string
          readOnly: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        displayName:
          description: 'A displayable name of the user.'
          example: 'Robert Baden-Powell'
          nullable: true
          readOnly: true
          type: string
        id:
          description: 'An internal, unique, randomly generated identifier of this entity.'
          example: 1a2b3c4d
          maxLength: 16
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/Profile.jsonld-read_User.create'
          readOnly: true
      required:
        - profile
      type: object
    User.jsonld-write_create:
      deprecated: false
      description: |-
        A person using eCamp.
        The properties available for all other eCamp users are here.
      properties:
        password:
          description: |-
            A new password for this user. At least 12 characters, as is explicitly recommended by OWASP:
            https://github.com/OWASP/ASVS/blob/master/4.0/en/0x11-V2-Authentication.md#v21-password-security
            2.1.1: Verify that user set passwords are at least 12 characters in length (after multiple spaces are combined).
          example: learning-by-doing-101
          maxLength: 128
          minLength: 12
          nullable: true
          type: string
          writeOnly: true
        profile:
          example:
            email: bi-pi@example.com
            firstname: Robert
            language: en
            nickname: Bi-Pi
            surname: Baden-Powell
          format: iri-reference
          type: string
        recaptchaToken:
          description: 'ReCaptchaToken used on Register-View.'
          nullable: true
          type: string
          writeOnly: true
      required:
        - password
        - profile
      type: object
  securitySchemes: []
info:
  description: ''
  title: 'eCamp v3'
  version: 1.0.0
openapi: 3.0.0
paths:
  /activities:
    get:
      deprecated: false
      description: 'Retrieves the collection of Activity resources.'
      operationId: api_activities_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Activity.jsonhal-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Activity.jsonld-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Activity-read_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries'
                type: array
          description: 'Activity collection'
      summary: 'Retrieves the collection of Activity resources.'
      tags:
        - Activity
    parameters: []
    post:
      deprecated: false
      description: 'Creates a Activity resource.'
      operationId: api_activities_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write_create'
        description: 'The new Activity resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: 'Activity resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Activity resource.'
      tags:
        - Activity
  '/activities/{id}':
    delete:
      deprecated: false
      description: 'Removes the Activity resource.'
      operationId: api_activities_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Activity identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'Activity resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Activity resource.'
      tags:
        - Activity
    get:
      deprecated: false
      description: 'Retrieves a Activity resource.'
      operationId: api_activities_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Activity identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: 'Activity resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Activity resource.'
      tags:
        - Activity
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Activity resource.'
      operationId: api_activities_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Activity identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The updated Activity resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonhal-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity.jsonld-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read_Activity.Category_Activity.ActivityProgressLabel_Activity.ActivityResponsibles_Activity.ScheduleEntries_Activity.ContentNodes'
          description: 'Activity resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Activity resource.'
      tags:
        - Activity
  /activity_progress_labels:
    get:
      deprecated: false
      description: 'Retrieves the collection of ActivityProgressLabel resources.'
      operationId: api_activity_progress_labels_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityProgressLabel-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityProgressLabel-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityProgressLabel-read'
                type: array
          description: 'ActivityProgressLabel collection'
      summary: 'Retrieves the collection of ActivityProgressLabel resources.'
      tags:
        - ActivityProgressLabel
    parameters: []
    post:
      deprecated: false
      description: 'Creates a ActivityProgressLabel resource.'
      operationId: api_activity_progress_labels_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel-write_create'
        description: 'The new ActivityProgressLabel resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
          description: 'ActivityProgressLabel resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ActivityProgressLabel resource.'
      tags:
        - ActivityProgressLabel
  '/activity_progress_labels/{id}':
    delete:
      deprecated: false
      description: 'Removes the ActivityProgressLabel resource.'
      operationId: api_activity_progress_labels_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ActivityProgressLabel identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'ActivityProgressLabel resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ActivityProgressLabel resource.'
      tags:
        - ActivityProgressLabel
    get:
      deprecated: false
      description: 'Retrieves a ActivityProgressLabel resource.'
      operationId: api_activity_progress_labels_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ActivityProgressLabel identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
          description: 'ActivityProgressLabel resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ActivityProgressLabel resource.'
      tags:
        - ActivityProgressLabel
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the ActivityProgressLabel resource.'
      operationId: api_activity_progress_labels_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ActivityProgressLabel identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ActivityProgressLabel-write'
        description: 'The updated ActivityProgressLabel resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityProgressLabel-read'
          description: 'ActivityProgressLabel resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the ActivityProgressLabel resource.'
      tags:
        - ActivityProgressLabel
  /activity_responsibles:
    get:
      deprecated: false
      description: 'Retrieves the collection of ActivityResponsible resources.'
      operationId: api_activity_responsibles_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: activity
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: activity.camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'activity.camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'activity[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ActivityResponsible.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityResponsible-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ActivityResponsible.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityResponsible-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityResponsible-read'
                type: array
          description: 'ActivityResponsible collection'
      summary: 'Retrieves the collection of ActivityResponsible resources.'
      tags:
        - ActivityResponsible
    parameters: []
    post:
      deprecated: false
      description: 'Creates a ActivityResponsible resource.'
      operationId: api_activity_responsibles_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ActivityResponsible.jsonhal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityResponsible-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ActivityResponsible.jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ActivityResponsible-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ActivityResponsible-write'
        description: 'The new ActivityResponsible resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
          description: 'ActivityResponsible resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ActivityResponsible resource.'
      tags:
        - ActivityResponsible
  '/activity_responsibles/{id}':
    delete:
      deprecated: false
      description: 'Removes the ActivityResponsible resource.'
      operationId: api_activity_responsibles_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ActivityResponsible identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'ActivityResponsible resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ActivityResponsible resource.'
      tags:
        - ActivityResponsible
    get:
      deprecated: false
      description: 'Retrieves a ActivityResponsible resource.'
      operationId: api_activity_responsibles_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ActivityResponsible identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityResponsible-read'
          description: 'ActivityResponsible resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ActivityResponsible resource.'
      tags:
        - ActivityResponsible
    parameters: []
  /auth/cevidb:
    get:
      operationId: oauthCevidbRedirect
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: path
          name: callback
          required: false
          schema:
            type: string
          style: simple
      responses:
        302:
          description: 'Redirect to the CeviDB OAuth authorization endpoint'
      summary: 'Log in using CeviDB Oauth.'
      tags:
        - OAuth
    parameters: []
    ref: 'CeviDB OAuth'
  /auth/google:
    get:
      operationId: oauthGoogleRedirect
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: path
          name: callback
          required: false
          schema:
            type: string
          style: simple
      responses:
        302:
          description: 'Redirect to the Google OAuth authorization endpoint'
      summary: 'Log in using Google Oauth.'
      tags:
        - OAuth
    parameters: []
    ref: 'Google OAuth'
  /auth/jubladb:
    get:
      operationId: oauthJubladbRedirect
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: path
          name: callback
          required: false
          schema:
            type: string
          style: simple
      responses:
        302:
          description: 'Redirect to the JublaDB OAuth authorization endpoint'
      summary: 'Log in using JublaDB Oauth.'
      tags:
        - OAuth
    parameters: []
    ref: 'JublaDB OAuth'
  /auth/pbsmidata:
    get:
      operationId: oauthPbsmidataRedirect
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: path
          name: callback
          required: false
          schema:
            type: string
          style: simple
      responses:
        302:
          description: 'Redirect to the PBS MiData OAuth authorization endpoint'
      summary: 'Log in using PBS MiData Oauth.'
      tags:
        - OAuth
    parameters: []
    ref: 'PBS MiData OAuth'
  /auth/reset_password:
    parameters: []
    post:
      deprecated: false
      description: 'Password-Reset-Link will be sent to the given email'
      operationId: api_authreset_password_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResetPassword.jsonhal-create'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword-create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ResetPassword.jsonld-create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ResetPassword-create'
          text/html:
            schema:
              $ref: '#/components/schemas/ResetPassword-create'
        description: 'The new ResetPassword resource'
        required: true
      responses:
        204:
          content:
            application/hal+json:
              schema: []
            application/json:
              schema: []
            application/ld+json:
              schema: []
            application/vnd.api+json:
              schema: []
            text/html:
              schema: []
          description: 'ResetPassword resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Request Password-Reset-Mail'
      tags:
        - ResetPassword
  '/auth/reset_password/{id}':
    get:
      deprecated: false
      description: 'Retrieves a ResetPassword resource.'
      operationId: api_authreset_password_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ResetPassword identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResetPassword.jsonhal'
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ResetPassword.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
            text/html:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: 'ResetPassword resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ResetPassword resource.'
      tags:
        - ResetPassword
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the ResetPassword resource.'
      operationId: api_authreset_password_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ResetPassword identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ResetPassword-update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ResetPassword-update'
        description: 'The updated ResetPassword resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResetPassword.jsonhal'
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ResetPassword.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
            text/html:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: 'ResetPassword resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the ResetPassword resource.'
      tags:
        - ResetPassword
  /authentication_token:
    parameters: []
    post:
      description: 'Creates a user token.'
      operationId: login_check_post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                identifier:
                  nullable: false
                  type: string
                password:
                  nullable: false
                  type: string
              required:
                - identifier
                - password
              type: object
        description: 'The login data'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  token: { nullable: false, readOnly: true, type: string }
                required:
                  - token
                type: object
          description: 'User token created'
      summary: 'Creates a user token.'
      tags:
        - 'Login Check'
  /camp_collaborations:
    get:
      deprecated: false
      description: 'Retrieves the collection of CampCollaboration resources.'
      operationId: api_camp_collaborations_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: activityResponsibles.activity
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'activityResponsibles.activity[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/CampCollaboration.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/CampCollaboration.jsonld-read_CampCollaboration.Camp_CampCollaboration.User' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
                type: array
          description: 'CampCollaboration collection'
      summary: 'Retrieves the collection of CampCollaboration resources.'
      tags:
        - CampCollaboration
    parameters: []
    post:
      deprecated: false
      description: 'Also sends an invitation email to the inviteEmail address, if specified.'
      operationId: api_camp_collaborations_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/CampCollaboration-write_create'
        description: 'The new CampCollaboration resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonld-read_CampCollaboration.Camp_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
          description: 'CampCollaboration resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a CampCollaboration resource.'
      tags:
        - CampCollaboration
  '/camp_collaborations/{id}':
    delete:
      deprecated: false
      description: 'Removes the CampCollaboration resource.'
      operationId: api_camp_collaborations_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'CampCollaboration identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'CampCollaboration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the CampCollaboration resource.'
      tags:
        - CampCollaboration
    get:
      deprecated: false
      description: 'Retrieves a CampCollaboration resource.'
      operationId: api_camp_collaborations_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'CampCollaboration identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonld-read_CampCollaboration.Camp_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
          description: 'CampCollaboration resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a CampCollaboration resource.'
      tags:
        - CampCollaboration
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the CampCollaboration resource.'
      operationId: api_camp_collaborations_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'CampCollaboration identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-write_update'
        description: 'The updated CampCollaboration resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonhal-read_CampCollaboration.Camp_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonld-read_CampCollaboration.Camp_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read_CampCollaboration.Camp_CampCollaboration.User'
          description: 'CampCollaboration resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the CampCollaboration resource.'
      tags:
        - CampCollaboration
  '/camp_collaborations/{id}/resend_invitation':
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the CampCollaboration resource.'
      operationId: api_camp_collaborations_idresend_invitation_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'CampCollaboration identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-resend_invitation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CampCollaboration-resend_invitation'
        description: 'The updated CampCollaboration resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CampCollaboration-read'
          description: 'CampCollaboration resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Send the invitation email for this CampCollaboration again. Only possible, if the status is already invited.'
      tags:
        - CampCollaboration
  /camps:
    get:
      deprecated: false
      description: 'Retrieves the collection of Camp resources.'
      operationId: api_camps_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: isPrototype
          required: false
          schema:
            type: boolean
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'isPrototype[]'
          required: false
          schema:
            items:
              type: boolean
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Camp.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Camp-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Camp.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Camp-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Camp-read'
                type: array
          description: 'Camp collection'
      summary: 'Retrieves the collection of Camp resources.'
      tags:
        - Camp
    parameters: []
    post:
      deprecated: false
      description: 'Creates a Camp resource.'
      operationId: api_camps_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Camp.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/Camp-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Camp.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Camp-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/Camp-write_create'
        description: 'The new Camp resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          description: 'Camp resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Camp resource.'
      tags:
        - Camp
  '/camps/{id}':
    delete:
      deprecated: false
      description: 'Removes the Camp resource.'
      operationId: api_camps_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Camp identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'Camp resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Camp resource.'
      tags:
        - Camp
    get:
      deprecated: false
      description: 'Retrieves a Camp resource.'
      operationId: api_camps_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Camp identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          description: 'Camp resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Camp resource.'
      tags:
        - Camp
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Camp resource.'
      operationId: api_camps_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Camp identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Camp-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Camp-write_update'
        description: 'The updated Camp resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonhal-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Camp.jsonld-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
            text/html:
              schema:
                $ref: '#/components/schemas/Camp-read_Camp.Periods_Period.Days_Camp.CampCollaborations_CampCollaboration.User'
          description: 'Camp resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Camp resource.'
      tags:
        - Camp
  /categories:
    get:
      deprecated: false
      description: 'Retrieves the collection of Category resources.'
      operationId: api_categories_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Category.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Category.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Category-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Category-read'
                type: array
          description: 'Category collection'
      summary: 'Retrieves the collection of Category resources.'
      tags:
        - Category
    parameters: []
    post:
      deprecated: false
      description: 'Creates a Category resource.'
      operationId: api_categories_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Category.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/Category-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Category.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Category-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/Category-write_create'
        description: 'The new Category resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Category.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: 'Category resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Category resource.'
      tags:
        - Category
  '/categories/{id}':
    delete:
      deprecated: false
      description: 'Removes the Category resource.'
      operationId: api_categories_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Category identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'Category resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Category resource.'
      tags:
        - Category
    get:
      deprecated: false
      description: 'Retrieves a Category resource.'
      operationId: api_categories_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Category identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Category.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: 'Category resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Category resource.'
      tags:
        - Category
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Category resource.'
      operationId: api_categories_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Category identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Category-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Category-write_update'
        description: 'The updated Category resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Category.jsonhal-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld-read_Category.PreferredContentTypes_Category.ContentNodes'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Category-read_Category.PreferredContentTypes_Category.ContentNodes'
          description: 'Category resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Category resource.'
      tags:
        - Category
  /content_node/column_layouts:
    get:
      deprecated: false
      description: 'Retrieves the collection of ColumnLayout resources.'
      operationId: api_content_nodecolumn_layouts_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ColumnLayout.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ColumnLayout-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ColumnLayout.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ColumnLayout-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ColumnLayout-read'
                type: array
          description: 'ColumnLayout collection'
      summary: 'Retrieves the collection of ColumnLayout resources.'
      tags:
        - ColumnLayout
    parameters: []
    post:
      deprecated: false
      description: 'Creates a ColumnLayout resource.'
      operationId: api_content_nodecolumn_layouts_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ColumnLayout.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnLayout-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ColumnLayout.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ColumnLayout-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/ColumnLayout-write_create'
        description: 'The new ColumnLayout resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
          description: 'ColumnLayout resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ColumnLayout resource.'
      tags:
        - ColumnLayout
  '/content_node/column_layouts/{id}':
    delete:
      deprecated: false
      description: 'Removes the ColumnLayout resource.'
      operationId: api_content_nodecolumn_layouts_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ColumnLayout identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'ColumnLayout resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ColumnLayout resource.'
      tags:
        - ColumnLayout
    get:
      deprecated: false
      description: 'Retrieves a ColumnLayout resource.'
      operationId: api_content_nodecolumn_layouts_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ColumnLayout identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
          description: 'ColumnLayout resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ColumnLayout resource.'
      tags:
        - ColumnLayout
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the ColumnLayout resource.'
      operationId: api_content_nodecolumn_layouts_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ColumnLayout identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ColumnLayout-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ColumnLayout-write_update'
        description: 'The updated ColumnLayout resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ColumnLayout-read'
          description: 'ColumnLayout resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the ColumnLayout resource.'
      tags:
        - ColumnLayout
  /content_node/material_nodes:
    get:
      deprecated: false
      description: 'Retrieves the collection of MaterialNode resources.'
      operationId: api_content_nodematerial_nodes_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/MaterialNode.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialNode-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/MaterialNode.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialNode-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialNode-read'
                type: array
          description: 'MaterialNode collection'
      summary: 'Retrieves the collection of MaterialNode resources.'
      tags:
        - MaterialNode
    parameters: []
    post:
      deprecated: false
      description: 'Creates a MaterialNode resource.'
      operationId: api_content_nodematerial_nodes_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaterialNode.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialNode-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaterialNode.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialNode-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/MaterialNode-write_create'
        description: 'The new MaterialNode resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
          description: 'MaterialNode resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a MaterialNode resource.'
      tags:
        - MaterialNode
  '/content_node/material_nodes/{id}':
    delete:
      deprecated: false
      description: 'Removes the MaterialNode resource.'
      operationId: api_content_nodematerial_nodes_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialNode identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'MaterialNode resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the MaterialNode resource.'
      tags:
        - MaterialNode
    get:
      deprecated: false
      description: 'Retrieves a MaterialNode resource.'
      operationId: api_content_nodematerial_nodes_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialNode identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
          description: 'MaterialNode resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a MaterialNode resource.'
      tags:
        - MaterialNode
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the MaterialNode resource.'
      operationId: api_content_nodematerial_nodes_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialNode identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MaterialNode-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialNode-write_update'
        description: 'The updated MaterialNode resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialNode.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialNode-read'
          description: 'MaterialNode resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the MaterialNode resource.'
      tags:
        - MaterialNode
  /content_node/multi_selects:
    get:
      deprecated: false
      description: 'Retrieves the collection of MultiSelect resources.'
      operationId: api_content_nodemulti_selects_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/MultiSelect.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MultiSelect-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/MultiSelect.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/MultiSelect-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/MultiSelect-read'
                type: array
          description: 'MultiSelect collection'
      summary: 'Retrieves the collection of MultiSelect resources.'
      tags:
        - MultiSelect
    parameters: []
    post:
      deprecated: false
      description: 'Creates a MultiSelect resource.'
      operationId: api_content_nodemulti_selects_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MultiSelect.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/MultiSelect-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MultiSelect.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MultiSelect-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/MultiSelect-write_create'
        description: 'The new MultiSelect resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
          description: 'MultiSelect resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a MultiSelect resource.'
      tags:
        - MultiSelect
  '/content_node/multi_selects/{id}':
    delete:
      deprecated: false
      description: 'Removes the MultiSelect resource.'
      operationId: api_content_nodemulti_selects_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MultiSelect identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'MultiSelect resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the MultiSelect resource.'
      tags:
        - MultiSelect
    get:
      deprecated: false
      description: 'Retrieves a MultiSelect resource.'
      operationId: api_content_nodemulti_selects_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MultiSelect identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
          description: 'MultiSelect resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a MultiSelect resource.'
      tags:
        - MultiSelect
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the MultiSelect resource.'
      operationId: api_content_nodemulti_selects_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MultiSelect identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MultiSelect-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MultiSelect-write_update'
        description: 'The updated MultiSelect resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MultiSelect.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MultiSelect-read'
          description: 'MultiSelect resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the MultiSelect resource.'
      tags:
        - MultiSelect
  /content_node/single_texts:
    get:
      deprecated: false
      description: 'Retrieves the collection of SingleText resources.'
      operationId: api_content_nodesingle_texts_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/SingleText.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SingleText-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/SingleText.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/SingleText-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/SingleText-read'
                type: array
          description: 'SingleText collection'
      summary: 'Retrieves the collection of SingleText resources.'
      tags:
        - SingleText
    parameters: []
    post:
      deprecated: false
      description: 'Creates a SingleText resource.'
      operationId: api_content_nodesingle_texts_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SingleText.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/SingleText-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SingleText.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SingleText-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/SingleText-write_create'
        description: 'The new SingleText resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SingleText-read'
          description: 'SingleText resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a SingleText resource.'
      tags:
        - SingleText
  '/content_node/single_texts/{id}':
    delete:
      deprecated: false
      description: 'Removes the SingleText resource.'
      operationId: api_content_nodesingle_texts_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'SingleText identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'SingleText resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the SingleText resource.'
      tags:
        - SingleText
    get:
      deprecated: false
      description: 'Retrieves a SingleText resource.'
      operationId: api_content_nodesingle_texts_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'SingleText identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SingleText-read'
          description: 'SingleText resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a SingleText resource.'
      tags:
        - SingleText
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the SingleText resource.'
      operationId: api_content_nodesingle_texts_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'SingleText identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SingleText-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SingleText-write_update'
        description: 'The updated SingleText resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SingleText.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SingleText-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SingleText-read'
          description: 'SingleText resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the SingleText resource.'
      tags:
        - SingleText
  /content_node/storyboards:
    get:
      deprecated: false
      description: 'Retrieves the collection of Storyboard resources.'
      operationId: api_content_nodestoryboards_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Storyboard.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Storyboard-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Storyboard.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Storyboard-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Storyboard-read'
                type: array
          description: 'Storyboard collection'
      summary: 'Retrieves the collection of Storyboard resources.'
      tags:
        - Storyboard
    parameters: []
    post:
      deprecated: false
      description: 'Creates a Storyboard resource.'
      operationId: api_content_nodestoryboards_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Storyboard.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/Storyboard-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Storyboard.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Storyboard-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/Storyboard-write_create'
        description: 'The new Storyboard resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
          description: 'Storyboard resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Storyboard resource.'
      tags:
        - Storyboard
  '/content_node/storyboards/{id}':
    delete:
      deprecated: false
      description: 'Removes the Storyboard resource.'
      operationId: api_content_nodestoryboards_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Storyboard identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'Storyboard resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Storyboard resource.'
      tags:
        - Storyboard
    get:
      deprecated: false
      description: 'Retrieves a Storyboard resource.'
      operationId: api_content_nodestoryboards_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Storyboard identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
          description: 'Storyboard resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Storyboard resource.'
      tags:
        - Storyboard
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Storyboard resource.'
      operationId: api_content_nodestoryboards_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Storyboard identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Storyboard-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Storyboard-write_update'
        description: 'The updated Storyboard resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Storyboard.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Storyboard-read'
          description: 'Storyboard resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Storyboard resource.'
      tags:
        - Storyboard
  /content_nodes:
    get:
      deprecated: false
      description: 'Retrieves the collection of ContentNode resources.'
      operationId: api_content_nodes_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: contentType
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: root
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'contentType[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'root[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ContentNode.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentNode-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ContentNode.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentNode-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ContentNode-read'
                type: array
          description: 'ContentNode collection'
      summary: 'Retrieves the collection of ContentNode resources.'
      tags:
        - ContentNode
    parameters: []
  /content_types:
    get:
      deprecated: false
      description: 'Retrieves the collection of ContentType resources.'
      operationId: api_content_types_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: categories
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'categories[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ContentType.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentType-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ContentType.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentType-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ContentType-read'
                type: array
          description: 'ContentType collection'
      summary: 'Retrieves the collection of ContentType resources.'
      tags:
        - ContentType
    parameters: []
  '/content_types/{id}':
    get:
      deprecated: false
      description: 'Retrieves a ContentType resource.'
      operationId: api_content_types_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ContentType identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContentType.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContentType-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContentType.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContentType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContentType-read'
          description: 'ContentType resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ContentType resource.'
      tags:
        - ContentType
    parameters: []
  /day_responsibles:
    get:
      deprecated: false
      description: 'Retrieves the collection of DayResponsible resources.'
      operationId: api_day_responsibles_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: day
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: day.period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'day.period[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'day[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/DayResponsible.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DayResponsible-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/DayResponsible.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/DayResponsible-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/DayResponsible-read'
                type: array
          description: 'DayResponsible collection'
      summary: 'Retrieves the collection of DayResponsible resources.'
      tags:
        - DayResponsible
    parameters: []
    post:
      deprecated: false
      description: 'Creates a DayResponsible resource.'
      operationId: api_day_responsibles_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DayResponsible.jsonhal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/DayResponsible-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DayResponsible.jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DayResponsible-write'
          text/html:
            schema:
              $ref: '#/components/schemas/DayResponsible-write'
        description: 'The new DayResponsible resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayResponsible.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DayResponsible.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
            text/html:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
          description: 'DayResponsible resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a DayResponsible resource.'
      tags:
        - DayResponsible
  '/day_responsibles/{id}':
    delete:
      deprecated: false
      description: 'Removes the DayResponsible resource.'
      operationId: api_day_responsibles_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'DayResponsible identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'DayResponsible resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the DayResponsible resource.'
      tags:
        - DayResponsible
    get:
      deprecated: false
      description: 'Retrieves a DayResponsible resource.'
      operationId: api_day_responsibles_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'DayResponsible identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayResponsible.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DayResponsible.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
            text/html:
              schema:
                $ref: '#/components/schemas/DayResponsible-read'
          description: 'DayResponsible resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a DayResponsible resource.'
      tags:
        - DayResponsible
    parameters: []
  /days:
    get:
      deprecated: false
      description: 'Retrieves the collection of Day resources.'
      operationId: api_days_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'period[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Day.jsonhal-read_Day.DayResponsibles' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Day.jsonld-read_Day.DayResponsibles' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
                type: array
          description: 'Day collection'
      summary: 'Retrieves the collection of Day resources.'
      tags:
        - Day
    parameters: []
  '/days/{id}':
    get:
      deprecated: false
      description: 'Retrieves a Day resource.'
      operationId: api_days_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Day identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Day.jsonhal-read_Day.DayResponsibles'
            application/json:
              schema:
                $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Day.jsonld-read_Day.DayResponsibles'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
            text/html:
              schema:
                $ref: '#/components/schemas/Day-read_Day.DayResponsibles'
          description: 'Day resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Day resource.'
      tags:
        - Day
    parameters: []
  /invitations:
    get:
      deprecated: false
      description: 'Not implemented. Only needed that we can show this endpoint in /index.jsonhal.'
      operationId: api_invitations_get_collection
      parameters: []
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Invitation.jsonhal' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Invitation.jsonld' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: 'Invitation collection'
      summary: 'Retrieves the collection of Invitation resources.'
      tags:
        - Invitation
    parameters: []
  '/invitations/{inviteKey}/accept':
    parameters: []
    patch:
      deprecated: false
      description: 'Use myInviteKey2 to accept an invitation in dev environment.'
      operationId: api_invitations_inviteKeyaccept_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Invitation identifier'
          explode: false
          in: path
          name: inviteKey
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Invitation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invitation-write'
        description: 'The updated Invitation resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-read'
          description: 'Invitation resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Accept an Invitation.'
      tags:
        - Invitation
  '/invitations/{inviteKey}/find':
    get:
      deprecated: false
      description: 'Use myInviteKey to find an invitation in the dev environment.'
      operationId: api_invitations_inviteKeyfind_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Invitation identifier'
          explode: false
          in: path
          name: inviteKey
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-read'
          description: 'Invitation resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Invitation resource.'
      tags:
        - Invitation
    parameters: []
  '/invitations/{inviteKey}/reject':
    parameters: []
    patch:
      deprecated: false
      description: 'Use myInviteKey to reject an invitation in dev environment.'
      operationId: api_invitations_inviteKeyreject_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Invitation identifier'
          explode: false
          in: path
          name: inviteKey
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Invitation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invitation-write'
        description: 'The updated Invitation resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-read'
          description: 'Invitation resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Reject an Invitation.'
      tags:
        - Invitation
  /material_items:
    get:
      deprecated: false
      description: 'Retrieves the collection of MaterialItem resources.'
      operationId: api_material_items_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: materialList
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: materialNode
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'materialList[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'materialNode[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/MaterialItem.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialItem-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/MaterialItem.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialItem-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialItem-read'
                type: array
          description: 'MaterialItem collection'
      summary: 'Retrieves the collection of MaterialItem resources.'
      tags:
        - MaterialItem
    parameters: []
    post:
      deprecated: false
      description: 'Creates a MaterialItem resource.'
      operationId: api_material_items_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaterialItem.jsonhal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaterialItem.jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/MaterialItem-write'
        description: 'The new MaterialItem resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
          description: 'MaterialItem resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a MaterialItem resource.'
      tags:
        - MaterialItem
  '/material_items/{id}':
    delete:
      deprecated: false
      description: 'Removes the MaterialItem resource.'
      operationId: api_material_items_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialItem identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'MaterialItem resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the MaterialItem resource.'
      tags:
        - MaterialItem
    get:
      deprecated: false
      description: 'Retrieves a MaterialItem resource.'
      operationId: api_material_items_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialItem identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
          description: 'MaterialItem resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a MaterialItem resource.'
      tags:
        - MaterialItem
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the MaterialItem resource.'
      operationId: api_material_items_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialItem identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MaterialItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialItem-write'
        description: 'The updated MaterialItem resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialItem.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialItem-read'
          description: 'MaterialItem resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the MaterialItem resource.'
      tags:
        - MaterialItem
  /material_lists:
    get:
      deprecated: false
      description: 'Retrieves the collection of MaterialList resources.'
      operationId: api_material_lists_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/MaterialList.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialList-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/MaterialList.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialList-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/MaterialList-read'
                type: array
          description: 'MaterialList collection'
      summary: 'Retrieves the collection of MaterialList resources.'
      tags:
        - MaterialList
    parameters: []
    post:
      deprecated: false
      description: 'Creates a MaterialList resource.'
      operationId: api_material_lists_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaterialList.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialList-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaterialList.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialList-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/MaterialList-write_create'
        description: 'The new MaterialList resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
          description: 'MaterialList resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a MaterialList resource.'
      tags:
        - MaterialList
  '/material_lists/{id}':
    delete:
      deprecated: false
      description: 'Removes the MaterialList resource.'
      operationId: api_material_lists_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialList identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'MaterialList resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the MaterialList resource.'
      tags:
        - MaterialList
    get:
      deprecated: false
      description: 'Retrieves a MaterialList resource.'
      operationId: api_material_lists_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialList identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
          description: 'MaterialList resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a MaterialList resource.'
      tags:
        - MaterialList
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the MaterialList resource.'
      operationId: api_material_lists_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'MaterialList identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MaterialList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaterialList-write'
        description: 'The updated MaterialList resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaterialList.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialList-read'
          description: 'MaterialList resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the MaterialList resource.'
      tags:
        - MaterialList
  /periods:
    get:
      deprecated: false
      description: 'Retrieves the collection of Period resources.'
      operationId: api_periods_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Period.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Period-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Period.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Period-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Period-read'
                type: array
          description: 'Period collection'
      summary: 'Retrieves the collection of Period resources.'
      tags:
        - Period
    parameters: []
    post:
      deprecated: false
      description: 'Creates a Period resource.'
      operationId: api_periods_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Period.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/Period-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Period.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Period-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/Period-write_create'
        description: 'The new Period resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Period.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Period-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Period.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Period-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Period-read'
          description: 'Period resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Period resource.'
      tags:
        - Period
  '/periods/{id}':
    delete:
      deprecated: false
      description: 'Removes the Period resource.'
      operationId: api_periods_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Period identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'Period resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Period resource.'
      tags:
        - Period
    get:
      deprecated: false
      description: 'Retrieves a Period resource.'
      operationId: api_periods_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Period identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Period.jsonhal-read_Period.Camp_Period.Days'
            application/json:
              schema:
                $ref: '#/components/schemas/Period-read_Period.Camp_Period.Days'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Period.jsonld-read_Period.Camp_Period.Days'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Period-read_Period.Camp_Period.Days'
            text/html:
              schema:
                $ref: '#/components/schemas/Period-read_Period.Camp_Period.Days'
          description: 'Period resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Period resource.'
      tags:
        - Period
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Period resource.'
      operationId: api_periods_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Period identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Period-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Period-write'
        description: 'The updated Period resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Period.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Period-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Period.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Period-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Period-read'
          description: 'Period resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Period resource.'
      tags:
        - Period
  /profiles:
    get:
      deprecated: false
      description: 'Retrieves the collection of Profile resources.'
      operationId: api_profiles_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: user.collaborations.camp
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'user.collaborations.camp[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/Profile.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Profile-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/Profile.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/Profile-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Profile-read'
                type: array
          description: 'Profile collection'
      summary: 'Retrieves the collection of Profile resources.'
      tags:
        - Profile
    parameters: []
  '/profiles/{id}':
    get:
      deprecated: false
      description: 'Retrieves a Profile resource.'
      operationId: api_profiles_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Profile identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Profile.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Profile-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Profile.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Profile-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Profile-read'
          description: 'Profile resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Profile resource.'
      tags:
        - Profile
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the Profile resource.'
      operationId: api_profiles_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'Profile identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Profile-write_update'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Profile-write_update'
        description: 'The updated Profile resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Profile.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Profile-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Profile.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Profile-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Profile-read'
          description: 'Profile resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the Profile resource.'
      tags:
        - Profile
  /schedule_entries:
    get:
      deprecated: false
      description: 'Retrieves the collection of ScheduleEntry resources.'
      operationId: api_schedule_entries_get_collection
      parameters:
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: activity
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'end[after]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'end[before]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'end[strictly_after]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'end[strictly_before]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: period
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'start[after]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'start[before]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'start[strictly_after]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: false
          in: query
          name: 'start[strictly_before]'
          required: false
          schema:
            type: string
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'activity[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        -
          allowEmptyValue: true
          allowReserved: false
          deprecated: false
          description: ''
          explode: true
          in: query
          name: 'period[]'
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/ScheduleEntry.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduleEntry-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/ScheduleEntry.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduleEntry-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduleEntry-read'
                type: array
          description: 'ScheduleEntry collection'
      summary: 'Retrieves the collection of ScheduleEntry resources.'
      tags:
        - ScheduleEntry
    parameters: []
    post:
      deprecated: false
      description: 'Creates a ScheduleEntry resource.'
      operationId: api_schedule_entries_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/ScheduleEntry-write_create'
        description: 'The new ScheduleEntry resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonhal-read_ScheduleEntry.Activity'
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonld-read_ScheduleEntry.Activity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            text/html:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
          description: 'ScheduleEntry resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ScheduleEntry resource.'
      tags:
        - ScheduleEntry
  '/schedule_entries/{id}':
    delete:
      deprecated: false
      description: 'Removes the ScheduleEntry resource.'
      operationId: api_schedule_entries_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ScheduleEntry identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'ScheduleEntry resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ScheduleEntry resource.'
      tags:
        - ScheduleEntry
    get:
      deprecated: false
      description: 'Retrieves a ScheduleEntry resource.'
      operationId: api_schedule_entries_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ScheduleEntry identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonhal-read_ScheduleEntry.Activity'
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonld-read_ScheduleEntry.Activity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            text/html:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
          description: 'ScheduleEntry resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ScheduleEntry resource.'
      tags:
        - ScheduleEntry
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the ScheduleEntry resource.'
      operationId: api_schedule_entries_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'ScheduleEntry identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry-write'
        description: 'The updated ScheduleEntry resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonhal-read_ScheduleEntry.Activity'
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry.jsonld-read_ScheduleEntry.Activity'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
            text/html:
              schema:
                $ref: '#/components/schemas/ScheduleEntry-read_ScheduleEntry.Activity'
          description: 'ScheduleEntry resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the ScheduleEntry resource.'
      tags:
        - ScheduleEntry
  /users:
    get:
      deprecated: false
      description: 'Retrieves the collection of User resources.'
      operationId: api_users_get_collection
      parameters: []
      responses:
        200:
          content:
            application/hal+json:
              schema:
                properties:
                  _embedded: { items: { $ref: '#/components/schemas/User.jsonhal-read' }, type: array }
                  _links: { properties: { first: { properties: { href: { format: iri-reference, type: string } }, type: object }, last: { properties: { href: { format: iri-reference, type: string } }, type: object }, next: { properties: { href: { format: iri-reference, type: string } }, type: object }, previous: { properties: { href: { format: iri-reference, type: string } }, type: object }, self: { properties: { href: { format: iri-reference, type: string } }, type: object } }, type: object }
                  itemsPerPage: { minimum: 0, type: integer }
                  totalItems: { minimum: 0, type: integer }
                required:
                  - _embedded
                  - _links
                type: object
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User-read'
                type: array
            application/ld+json:
              schema:
                properties:
                  'hydra:member': { items: { $ref: '#/components/schemas/User.jsonld-read' }, type: array }
                  'hydra:search': { properties: { '@type': { type: string }, 'hydra:mapping': { items: { properties: { '@type': { type: string }, property: { nullable: true, type: string }, required: { type: boolean }, variable: { type: string } }, type: object }, type: array }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string } }, type: object }
                  'hydra:totalItems': { minimum: 0, type: integer }
                  'hydra:view': { example: { '@id': string, 'hydra:first': string, 'hydra:last': string, 'hydra:next': string, 'hydra:previous': string, type: string }, properties: { '@id': { format: iri-reference, type: string }, '@type': { type: string }, 'hydra:first': { format: iri-reference, type: string }, 'hydra:last': { format: iri-reference, type: string }, 'hydra:next': { format: iri-reference, type: string }, 'hydra:previous': { format: iri-reference, type: string } }, type: object }
                required:
                  - 'hydra:member'
                type: object
            application/vnd.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/User-read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User-read'
                type: array
          description: 'User collection'
      summary: 'Retrieves the collection of User resources.'
      tags:
        - User
    parameters: []
    post:
      deprecated: false
      description: 'Creates a User resource.'
      operationId: api_users_post
      parameters: []
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonhal-write_create'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write_create'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write_create'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write_create'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write_create'
        description: 'The new User resource'
        required: true
      responses:
        201:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal-read_User.create'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read_User.create'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read_User.create'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read_User.create'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read_User.create'
          description: 'User resource created'
          links: []
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      tags:
        - User
  '/users/{id}':
    delete:
      deprecated: false
      description: 'Removes the User resource.'
      operationId: api_users_id_delete
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'User identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      tags:
        - User
    get:
      deprecated: false
      description: 'Retrieves a User resource.'
      operationId: api_users_id_get
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'User identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          description: 'User resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      tags:
        - User
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the User resource.'
      operationId: api_users_id_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'User identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The updated User resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          description: 'User resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the User resource.'
      tags:
        - User
  '/users/{id}/activate':
    parameters: []
    patch:
      deprecated: false
      description: 'Updates the User resource.'
      operationId: api_users_idactivate_patch
      parameters:
        -
          allowEmptyValue: false
          allowReserved: false
          deprecated: false
          description: 'User identifier'
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-activate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-activate'
        description: 'The updated User resource'
        required: true
      responses:
        200:
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          description: 'User resource updated'
          links: []
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      summary: 'Updates the User resource.'
      tags:
        - User
security: []
servers:
  -
    description: ''
    url: /
tags: []
